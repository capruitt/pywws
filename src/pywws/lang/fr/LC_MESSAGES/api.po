# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-16, pywws contributors
# This file is distributed under the same license as the pywws package.
# 
# Translators:
# Jacques Desroches <jacques.desroches@weatherbyyou.com>, 2015
# Jacques Desroches <metelsto@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: pywws\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-25 10:44+0000\n"
"PO-Revision-Date: 2016-10-23 14:02+0000\n"
"Last-Translator: Jacques Desroches <metelsto@gmail.com>\n"
"Language-Team: French (http://www.transifex.com/jim-easterbrook/pywws/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../src/doc/api/pywws.DataStore.rst:2
msgid "pywws.DataStore"
msgstr "pywws.DataStore"

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore:1
msgid "DataStore.py - stores readings in easy to access files"
msgstr "DataStore.py - enregistre les lectures dans des fichiers facilement accessibles"

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore:4
#: ../../src/pywws/EWtoPy.pydocstring of pywws.EWtoPy:13
#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:14
#: ../../src/pywws/Plot.pydocstring of pywws.Plot:15
#: ../../src/pywws/Template.pydocstring of pywws.Template:14
#: ../../src/pywws/TimeZone.pydocstring of pywws.TimeZone:5
#: ../../src/pywws/Upload.pydocstring of pywws.Upload:16
#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:8
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:16
#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi:4
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi:4 ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1:4 ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb:4 ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1:4 ../../src/pywws/toservice.pydocstring of
#: pywws.toservice:15
msgid "Introduction"
msgstr "Introduction"

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore:6
msgid ""
"This module is at the core of pywws. It stores data on disc, but without the"
" overhead of a full scale database system. I have designed it to run on a "
"small memory machine such as my Asus router. To minimise memory usage it "
"only loads one day's worth of raw data at a time into memory."
msgstr "Ce module est au cœur de mon logiciel de station météo. Il stocke les données sur disque, mais sans le coût d'un système de base de données à grande échelle. Je l'ai conçu pour fonctionner sur une machine avec peu de mémoire comme mon routeur Asus. Pour minimiser l'utilisation de la mémoire, il ne charge que l'équivalent d'une journée de données à la fois dans la mémoire."

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore:12
msgid ""
"From a \"user\" point of view, the data is accessed as a cross between a "
"list and a dictionary. Each data record is indexed by a "
":py:class:`datetime.datetime` object (dictionary behaviour), but records are"
" stored in order and can be accessed as slices (list behaviour)."
msgstr "D'un  point de vue \"utilisateur\", les données sont accédées comme un croisement entre une liste et un dictionnaire. Chaque enregistrement de données est indexée par un objet :py:class:`datetime.datetime` (comportement dictionnaire), mais les enregistrements sont stockés dans l'ordre et peut être consulté sous forme de tranches (comportement liste)."

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore:18
msgid ""
"For example, to access the hourly data for Christmas day 2009, one might do "
"the following::"
msgstr "Par exemple, pour accéder aux données horaires pour le jour de Noël 2009, on peut faire ce qui suit ::"

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore:27
msgid "Some more examples of data access::"
msgstr "D'autres exemples d'accès aux données::"

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore:36
msgid ""
"Note that the :py:class:`datetime.datetime` index is in UTC. You may need to"
" apply an offset to convert to local time."
msgstr "Notez que l'indice :py:class:`datetime.datetime` est au format UTC.  Vous devrez peut-être appliquer un décalage pour convertir en heure locale."

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore:39
msgid ""
"The module provides five classes to store different data. "
":py:class:`data_store` takes \"raw\" data from the weather station; "
":py:class:`calib_store`, :py:class:`hourly_store`, :py:class:`daily_store` "
"and :py:class:`monthly_store` store processed data (see "
":py:mod:`pywws.Process`). All three are derived from the same ``core_store``"
" class, they only differ in the keys and types of data stored in each "
"record."
msgstr "Le module fournit cinq classes pour stocker des données différentes.  :py:class:`data_store` prend les données  \"brutes\" de la station météo; :py:class:`calib_store`, :py:class:`hourly_store`, :py:class:`daily_store` et :py:class:`monthly_store` stockent les données traitées (voir :py:mod:`pywws.Process`). Les trois sont dérivés de la même classe ``core_store``, ils ne diffèrent que par les clés et les types de données stockées dans chaque enregistrement."

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore:48
#: ../../src/pywws/EWtoPy.pydocstring of pywws.EWtoPy:32
#: ../../src/pywws/LogData.pydocstring of pywws.LogData:38
#: ../../src/pywws/Plot.pydocstring of pywws.Plot:468
#: ../../src/pywws/Template.pydocstring of pywws.Template:251
#: ../../src/pywws/TimeZone.pydocstring of pywws.TimeZone:14
#: ../../src/pywws/Upload.pydocstring of pywws.Upload:50
#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:55
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:226
msgid "Detailed API"
msgstr "API détaillé"

#: ../../src/doc/api/pywws.DataStore.rst:9
#: ../../src/doc/api/pywws.EWtoPy.rst:9 ../../src/doc/api/pywws.Forecast.rst:9
#: ../../src/doc/api/pywws.Hourly.rst:9 ../../src/doc/api/pywws.LiveLog.rst:9
#: ../../src/doc/api/pywws.Localisation.rst:9
#: ../../src/doc/api/pywws.LogData.rst:9 ../../src/doc/api/pywws.Logger.rst:9
#: ../../src/doc/api/pywws.Plot.rst:9 ../../src/doc/api/pywws.Process.rst:9
#: ../../src/doc/api/pywws.Reprocess.rst:9
#: ../../src/doc/api/pywws.SetWeatherStation.rst:9
#: ../../src/doc/api/pywws.Template.rst:9
#: ../../src/doc/api/pywws.TestWeatherStation.rst:9
#: ../../src/doc/api/pywws.TimeZone.rst:9
#: ../../src/doc/api/pywws.ToTwitter.rst:9
#: ../../src/doc/api/pywws.TwitterAuth.rst:9
#: ../../src/doc/api/pywws.USBQualityTest.rst:9
#: ../../src/doc/api/pywws.Upload.rst:9
#: ../../src/doc/api/pywws.WeatherStation.rst:9
#: ../../src/doc/api/pywws.WindRose.rst:9
#: ../../src/doc/api/pywws.YoWindow.rst:9
#: ../../src/doc/api/pywws.ZambrettiCore.rst:9
#: ../../src/doc/api/pywws.conversions.rst:9
#: ../../src/doc/api/pywws.device_ctypes_hidapi.rst:9
#: ../../src/doc/api/pywws.livelogdaemon.rst:9
#: ../../src/doc/api/pywws.toservice.rst:9
#: ../../src/doc/api/pywws.version.rst:9
msgid "Functions"
msgstr "Fonctions"

#: ../../<autosummary>:1
msgid ":obj:`Lock <pywws.DataStore.Lock>`\\"
msgstr ":obj:`Lock <pywws.DataStore.Lock>`\\"

#: ../../<autosummary>:1
msgid "allocate_lock() -> lock object"
msgstr "allocate_lock() -> lock object"

#: ../../<autosummary>:1
msgid ""
":obj:`safestrptime <pywws.DataStore.safestrptime>`\\ (date_string[, format])"
msgstr ":obj:`safestrptime <pywws.DataStore.safestrptime>`\\ (date_string[, format])"

#: ../../src/doc/api/pywws.DataStore.rst:20
#: ../../src/doc/api/pywws.EWtoPy.rst:19
#: ../../src/doc/api/pywws.Forecast.rst:21
#: ../../src/doc/api/pywws.Hourly.rst:21
#: ../../src/doc/api/pywws.LiveLog.rst:21
#: ../../src/doc/api/pywws.LogData.rst:20 ../../src/doc/api/pywws.Plot.rst:37
#: ../../src/doc/api/pywws.Process.rst:25
#: ../../src/doc/api/pywws.SetWeatherStation.rst:21
#: ../../src/doc/api/pywws.Tasks.rst:13
#: ../../src/doc/api/pywws.Template.rst:39
#: ../../src/doc/api/pywws.TimeZone.rst:19
#: ../../src/doc/api/pywws.ToTwitter.rst:20
#: ../../src/doc/api/pywws.TwitterAuth.rst:20
#: ../../src/doc/api/pywws.Upload.rst:20
#: ../../src/doc/api/pywws.WeatherStation.rst:19
#: ../../src/doc/api/pywws.WindRose.rst:37
#: ../../src/doc/api/pywws.YoWindow.rst:21
#: ../../src/doc/api/pywws.calib.rst:13
#: ../../src/doc/api/pywws.constants.rst:13
#: ../../src/doc/api/pywws.device_ctypes_hidapi.rst:19
#: ../../src/doc/api/pywws.device_cython_hidapi.rst:13
#: ../../src/doc/api/pywws.device_libusb1.rst:13
#: ../../src/doc/api/pywws.device_pyusb.rst:13
#: ../../src/doc/api/pywws.device_pyusb1.rst:13
#: ../../src/doc/api/pywws.livelogdaemon.rst:21
#: ../../src/doc/api/pywws.toservice.rst:20
msgid "Classes"
msgstr "Classes"

#: ../../<autosummary>:1
msgid ":obj:`ParamStore <pywws.DataStore.ParamStore>`\\ (root_dir, file_name)"
msgstr ":obj:`ParamStore <pywws.DataStore.ParamStore>`\\ (root_dir, file_name)"

#: ../../<autosummary>:1
msgid ""
":obj:`RawConfigParser <pywws.DataStore.RawConfigParser>`\\ ([defaults, "
"dict_type, ...])"
msgstr ":obj:`RawConfigParser <pywws.DataStore.RawConfigParser>`\\ ([defaults, dict_type, ...])"

#: ../../<autosummary>:1
msgid ":obj:`calib_store <pywws.DataStore.calib_store>`\\ (root_dir)"
msgstr ":obj:`calib_store <pywws.DataStore.calib_store>`\\ (root_dir)"

#: ../../<autosummary>:1 ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.calib_store:1
msgid "Stores 'calibrated' weather station data."
msgstr "Stocke les données  \"calibrées\" de la station météo."

#: ../../<autosummary>:1
msgid ":obj:`core_store <pywws.DataStore.core_store>`\\ (root_dir)"
msgstr ":obj:`core_store <pywws.DataStore.core_store>`\\ (root_dir)"

#: ../../<autosummary>:1
msgid ":obj:`daily_store <pywws.DataStore.daily_store>`\\ (root_dir)"
msgstr ":obj:`daily_store <pywws.DataStore.daily_store>`\\ (root_dir)"

#: ../../<autosummary>:1 ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.daily_store:1
msgid "Stores daily summary weather station data."
msgstr "Stocke les données sommaires quotidiens de la stations météo."

#: ../../<autosummary>:1
msgid ":obj:`data_store <pywws.DataStore.data_store>`\\ (root_dir)"
msgstr ":obj:`data_store <pywws.DataStore.data_store>`\\ (root_dir)"

#: ../../<autosummary>:1 ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.data_store:1
msgid "Stores raw weather station data."
msgstr "Stocke les données brutes de la station météo."

#: ../../<autosummary>:1
msgid ":obj:`date <pywws.DataStore.date>`\\"
msgstr ":obj:`date <pywws.DataStore.date>`\\"

#: ../../<autosummary>:1 ../../<autosummary>:1
msgid "date(year, month, day) --> date object"
msgstr "date(année, mois, jour) --> date object"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.DataStore.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.DataStore.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
msgid "The year, month and day arguments are required."
msgstr "Les arguments année, mois et jour sont nécessaires."

#: ../../<autosummary>:1
msgid ":obj:`hourly_store <pywws.DataStore.hourly_store>`\\ (root_dir)"
msgstr ":obj:`hourly_store <pywws.DataStore.hourly_store>`\\ (root_dir)"

#: ../../<autosummary>:1 ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.hourly_store:1
msgid "Stores hourly summary weather station data."
msgstr "Stocke les données sommaires horaire de la stations météo."

#: ../../<autosummary>:1
msgid ":obj:`monthly_store <pywws.DataStore.monthly_store>`\\ (root_dir)"
msgstr ":obj:`monthly_store <pywws.DataStore.monthly_store>`\\ (root_dir)"

#: ../../<autosummary>:1 ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.monthly_store:1
msgid "Stores monthly summary weather station data."
msgstr "Stocke les données mensuelles sommaire de la stations météo."

#: ../../<autosummary>:1
msgid ":obj:`params <pywws.DataStore.params>`\\ (root_dir)"
msgstr ":obj:`params <pywws.DataStore.params>`\\ (root_dir)"

#: ../../<autosummary>:1 ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.params:1
msgid "Parameters are stored in a file \"weather.ini\" in root_dir."
msgstr "Les paramètres sont stockés dans le fichier \"weather.ini\", dans le répertoire spécifié par root_dir."

#: ../../<autosummary>:1
msgid ":obj:`status <pywws.DataStore.status>`\\ (root_dir)"
msgstr ":obj:`status <pywws.DataStore.status>`\\ (root_dir)"

#: ../../<autosummary>:1 ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.status:1
msgid "Status is stored in a file \"status.ini\" in root_dir."
msgstr "Le status est stocké dans le fichier \"status.ini\", dans le répertoire spécifié par root_dir."

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.DataStore.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.DataStore.timedelta>`\\"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../<autosummary>:1
msgid "Difference between two datetime values."
msgstr "Différence entre deux valeurs de datetime."

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore.ParamStore.get:1
msgid "Get a parameter value and return a string."
msgstr "Obtient une valeur de paramètre et renvoie une chaîne."

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore.ParamStore.get:3
msgid ""
"If default is specified and section or option are not defined in the file, "
"they are created and set to default, which is then the return value."
msgstr "Si la valeur par défaut est spécifiée et la section ou l'option n'est pas définie dans le fichier, ils sont créés et définit par défaut, qui est alors la valeur retournée."

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore.ParamStore.set:1
msgid "Set option in section to string value."
msgstr "Définit l'option dans la section, à chaîne."

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore.ParamStore.unset:1
msgid "Remove option from section."
msgstr "Supprimer l'option de la section."

#: ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.core_store.before:1
msgid ""
"Return datetime of newest existing data record whose datetime is < idx."
msgstr "Retourne datetime (horodate) du plus récent enregistrement de données existant dont datetime est <idx."

#: ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.core_store.before:4 ../../src/pywws/DataStore.pydocstring
#: of pywws.DataStore.core_store.after:4
msgid ""
"Might not even be in the same year! If no such record exists, return None."
msgstr "Peut même ne pas être dans la même année! Si aucun enregistrement n'existe, retourne None (Aucun)."

#: ../../src/pywws/DataStore.pydocstring of pywws.DataStore.core_store.after:1
msgid ""
"Return datetime of oldest existing data record whose datetime is >= idx."
msgstr "Retourne datetime (horodate) de la plus ancienne donnée existante dont datetime est> = idx."

#: ../../src/pywws/DataStore.pydocstring of
#: pywws.DataStore.core_store.nearest:1
msgid "Return datetime of record whose datetime is nearest idx."
msgstr "Retourne le datetime (horodate) de l'enregistrement dont le datetime est le plus près de idx."

#: ../../src/doc/api/pywws.DataStore.rst:45
#: ../../src/doc/api/pywws.EWtoPy.rst:33
#: ../../src/doc/api/pywws.Forecast.rst:35
#: ../../src/doc/api/pywws.Hourly.rst:34
#: ../../src/doc/api/pywws.LiveLog.rst:36
#: ../../src/doc/api/pywws.Localisation.rst:29
#: ../../src/doc/api/pywws.LogData.rst:36
#: ../../src/doc/api/pywws.Logger.rst:26 ../../src/doc/api/pywws.Plot.rst:56
#: ../../src/doc/api/pywws.Process.rst:49
#: ../../src/doc/api/pywws.Reprocess.rst:28
#: ../../src/doc/api/pywws.SetWeatherStation.rst:35
#: ../../src/doc/api/pywws.Tasks.rst:31
#: ../../src/doc/api/pywws.Template.rst:54
#: ../../src/doc/api/pywws.TestWeatherStation.rst:28
#: ../../src/doc/api/pywws.TimeZone.rst:32
#: ../../src/doc/api/pywws.ToTwitter.rst:36
#: ../../src/doc/api/pywws.TwitterAuth.rst:33
#: ../../src/doc/api/pywws.USBQualityTest.rst:27
#: ../../src/doc/api/pywws.Upload.rst:33
#: ../../src/doc/api/pywws.WeatherStation.rst:36
#: ../../src/doc/api/pywws.WindRose.rst:53
#: ../../src/doc/api/pywws.YoWindow.rst:36
#: ../../src/doc/api/pywws.ZambrettiCore.rst:28
#: ../../src/doc/api/pywws.calib.rst:27
#: ../../src/doc/api/pywws.constants.rst:27
#: ../../src/doc/api/pywws.conversions.rst:42
#: ../../src/doc/api/pywws.device_ctypes_hidapi.rst:32
#: ../../src/doc/api/pywws.device_cython_hidapi.rst:26
#: ../../src/doc/api/pywws.device_libusb1.rst:26
#: ../../src/doc/api/pywws.device_pyusb.rst:26
#: ../../src/doc/api/pywws.device_pyusb1.rst:26
#: ../../src/doc/api/pywws.livelogdaemon.rst:35
#: ../../src/doc/api/pywws.toservice.rst:36
#: ../../src/doc/api/pywws.version.rst:26
msgid ""
"Comments or questions? Please subscribe to the pywws mailing list "
"http://groups.google.com/group/pywws and let us know."
msgstr "Commentaires et questions? SVP, abonnez-vous à la liste pywws  http://groups.google.com/group/pywws et faites-vous entendre."

#: ../../src/doc/api/pywws.EWtoPy.rst:2
msgid "pywws.EWtoPy"
msgstr "pywws.EWtoPy"

#: ../../src/pywws/EWtoPy.pydocstring of pywws.EWtoPy:1
msgid "Convert EasyWeather.dat data to pywws format ::"
msgstr "Converti les données du format EasyWeather.dat vers le format de pywws."

#: ../../src/pywws/EWtoPy.pydocstring of pywws.EWtoPy:15
msgid ""
"This program converts data from the format used by the EasyWeather program "
"supplied with the weather station to the format used by pywws. It is useful "
"if you've been using EasyWeather for a while before discovering pywws."
msgstr "Ce programme convertit les données du format utilisé par le programme EasyWeather fourni avec la station météo, vers le format utilisé par pywws. Il est utile si vous avez utilisé EasyWeather pendant un certain temps avant de découvrir pywws."

#: ../../src/pywws/EWtoPy.pydocstring of pywws.EWtoPy:20
msgid ""
"The ``EasyWeather.dat`` file is only used to provide data from before the "
"start of the pywws data. As your weather station has its own memory, you "
"should run :py:mod:`pywws.LogData` before :py:mod:`pywws.EWtoPy` to minimise"
" use of the EasyWeather.dat file."
msgstr "Le  fichier ``EasyWeather.dat`` n'est utilisé que pour fournir les données précédent le début des données pywws. Étant donné que votre station météo dispose de sa propre mémoire, vous devez exécuter :py:mod:`pywws.LogData` avant :py:mod:`pywws.EWtoPy` pour minimiser l'utilisation du fichier EasyWeather.dat."

#: ../../src/pywws/EWtoPy.pydocstring of pywws.EWtoPy:25
msgid ""
":py:mod:`pywws.EWtoPy` converts the time stamps in EasyWeather.dat from "
"local time to UTC. This can cause problems when daylight savings time ends, "
"as local time appears to jump back one hour. The program attempts to detect "
"this and correct the affected time stamps, but I have not been able to test "
"this on a variety of time zones."
msgstr ":py:mod:`pywws.EWtoPy` convertit les horodates EasyWeather.dat de l'heure locale vers l'heure UTC. Cela peut causer des problèmes lorsque l'heure d'été se termine, puisque l'heure locale semble revenir en arrière d'une heure. Le programme tente de détecter et de corriger les horodates concernées, mais je n'ai pas pu tester cela sur une variété de fuseaux horaires."

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.EWtoPy.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.EWtoPy.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.EWtoPy.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.EWtoPy.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.EWtoPy.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.EWtoPy.timedelta>`\\"

#: ../../src/doc/api/pywws.Forecast.rst:2
msgid "pywws.Forecast"
msgstr "pywws.Forecast"

#: ../../src/pywws/Forecast.pydocstring of pywws.Forecast:1
msgid "Predict future weather using recent data ::"
msgstr "Prédit le temps futur en utilisant les données récentes."

#: ../../<autosummary>:1
msgid ":obj:`Zambretti <pywws.Forecast.Zambretti>`\\ (params, hourly_data)"
msgstr ":obj:`Zambretti <pywws.Forecast.Zambretti>`\\ (params, hourly_data)"

#: ../../<autosummary>:1
msgid ""
":obj:`ZambrettiCode <pywws.Forecast.ZambrettiCode>`\\ (params, hourly_data)"
msgstr ":obj:`ZambrettiCode <pywws.Forecast.ZambrettiCode>`\\ (params, hourly_data)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.Forecast.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.Forecast.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.Forecast.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.Forecast.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.Forecast.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.Forecast.timedelta>`\\"

#: ../../src/doc/api/pywws.Hourly.rst:2
msgid "pywws.Hourly"
msgstr "pywws.Hourly"

#: ../../src/pywws/Hourly.pydocstring of pywws.Hourly:1
msgid ""
"Get weather data, process it, prepare graphs & text files and upload to a "
"web site."
msgstr "Obtient les données météorologiques, les traite, prépare les fichiers de graphes & textes et les téléverse sur un site web."

#: ../../src/pywws/Hourly.pydocstring of pywws.Hourly:4
msgid "Typically run every hour from cron. ::"
msgstr "Exécuté à partir d'une tâche cron, en règle générale toutes les heures. ::"

#: ../../src/pywws/Hourly.pydocstring of pywws.Hourly:14
msgid ""
"This script does little more than call other modules in sequence to get data"
" from the weather station, process it, plot some graphs, generate some text "
"files and upload the results to a web site."
msgstr "Ce script ne fait guère plus que d'appeler d'autres modules dans l'ordre pour obtenir les données de la station météo, les traiter, tracer des graphes, de générer des fichiers texte et transférer le résultat vers un site web."

#: ../../src/pywws/Hourly.pydocstring of pywws.Hourly:18
msgid ""
"For more information on using ``Hourly.py``, see "
":doc:`../guides/hourlylogging`."
msgstr "Pour plus d'informations sur l'utilisation de ``Hourly.py``, voir :doc:`../guides/hourlylogging`."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.Hourly.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.Hourly.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`Hourly <pywws.Hourly.Hourly>`\\ (data_dir)"
msgstr ":obj:`Hourly <pywws.Hourly.Hourly>`\\ (data_dir)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.Hourly.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.Hourly.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`DataLogger <pywws.Hourly.DataLogger>`\\ (params, status, raw_data)"
msgstr ":obj:`DataLogger <pywws.Hourly.DataLogger>`\\ (params, status, raw_data)"

#: ../../src/doc/api/pywws.LiveLog.rst:2
msgid "pywws.LiveLog"
msgstr "pywws.LiveLog"

#: ../../src/pywws/LiveLog.pydocstring of pywws.LiveLog:1
msgid "Get weather data, store it, and process it."
msgstr "Obtient les données météo, les stocke et les traite."

#: ../../src/pywws/LiveLog.pydocstring of pywws.LiveLog:3
msgid ""
"Run this continuously, having set what tasks are to be done. This script can"
" also be run with the ``pywws-livelog`` command. ::"
msgstr "Exécuter en continu, après avoir défini les tâches à compléter. Ce script peut également être exécuté avec la commande ``pywws-livelog`` ::"

#: ../../src/pywws/LiveLog.pydocstring of pywws.LiveLog:13
msgid ""
"For more information on using ``LiveLog.py``, see "
":doc:`../guides/livelogging`."
msgstr "Pour plus d'informations sur l'utilisation ``LiveLog.py``, voir :doc:`../guides/livelogging`."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.LiveLog.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.LiveLog.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`LiveLog <pywws.LiveLog.LiveLog>`\\ (data_dir)"
msgstr ":obj:`LiveLog <pywws.LiveLog.LiveLog>`\\ (data_dir)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.LiveLog.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.LiveLog.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ""
":obj:`DataLogger <pywws.LiveLog.DataLogger>`\\ (params, status, raw_data)"
msgstr ":obj:`DataLogger <pywws.LiveLog.DataLogger>`\\ (params, status, raw_data)"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.LiveLog.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.LiveLog.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.LiveLog.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.LiveLog.timedelta>`\\"

#: ../../src/doc/api/pywws.Localisation.rst:2
msgid "pywws.Localisation"
msgstr "pywws.Localisation"

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:1
msgid "Localisation.py - provide translations of strings into local language"
msgstr "Localisation.py - fournit des traductions de phrases en langue locale"

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:16
msgid ""
"Some of the pywws modules, such as WindRose.py, can automatically use your "
"local language for such things as wind directions. The Localisation.py "
"module, mostly copied from examples in the Python documentation, enables "
"this."
msgstr "Certains modules pywws, comme WindRose.py, peuvent automatiquement utiliser la langue locale pour des choses telles que les directions du vent. Le module Localisation.py, surtout copié à partir d'exemples dans la documentation Python, permet cela."

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:21
msgid ""
"Localisation of pywws is done in two parts - translating strings such as "
"'rising very rapidly', and changing the 'locale' which controls things like "
"month names and number representation (e.g. '23,2' instead of '23.2'). On "
"some computers it may not be possible to set the locale, but translated "
"strings can still be used."
msgstr "Traduction de pywws se fait en deux parties - traduisant les phrases comme 'rising very rapidly', en changeant le \"terme local\" qui contrôle des choses comme le noms des mois et la représentation des nombres (par exemple le nombre '23, 2' au lieu de '23 .2 '). Sur certains ordinateurs, il peut ne pas être possible de définir les paramètres régionaux, mais les chaînes traduites peuvent encore être utilisées."

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:28
msgid "Using a different language"
msgstr "En utilisant une langue différente"

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:30
msgid ""
"The language used by pywws is set in the ``[config]`` section of the "
"``weather.ini`` file. This can be a two-letter language code, such as ``en``"
" (English), or can specify a national variant, such as ``fr_CA`` (Canadian "
"French). It could also include a character set, for example ``de_DE.UTF-8``."
msgstr "Le langage utilisé par pywws est situé dans la section ``[config]`` du fichier ``weather.ini``. Cela peut être un code de langue à deux lettres, comme ``fr`` (français), ou pouvez spécifier une variante nationale, telle que ``fr_CA`` (canadien-français). Il pourrait également s'agir d'un jeu de caractères, par exemple ``de_DE.UTF-8``."

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:36
msgid ""
"The choice of language is very system dependant, so Localisation.py can be "
"run as a standalone program to test language codes. A good starting point "
"might be your system's ``LANG`` environment variable, for example::"
msgstr "Le choix de la langue dépend beaucoup du système, donc Localisation.py peut être exécuté comme un programme autonome pour tester les codes linguistiques. Un bon point de départ pourrait être, par exemple, votre variable d'environnement ``LANG``::"

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:55
msgid "In most cases no more than a two-letter code is required::"
msgstr "Dans la plupart des cas, pas plus que d'un code à deux lettres n'est requis::"

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:69
msgid "If you try an unsupported language, pywws falls back to English::"
msgstr "Si vous essayez une langue non prise en charge, pywws reprend l'anglais::"

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:83
msgid ""
"Once you've found a suitable language code that works, you can configure "
"pywws to use it by editing your ``weather.ini`` file::"
msgstr "Une fois que vous avez trouvé un code de langue approprié qui fonctionne, vous pouvez demander à pywws de l'utiliser en éditant votre fichier ``weather.ini``::"

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:90
msgid "Creating a new translation"
msgstr "Créer une nouvelle traduction"

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation:92
msgid ""
"If there is no translation file for your preferred language then you need to"
" create one. See :doc:`../guides/language` for detailed instructions."
msgstr "S'il n'y a aucun fichier de traduction pour votre langue préférée, alors vous devez en créer un. Voir :doc:`../guides/language` pour obtenir les instructions détaillées."

#: ../../<autosummary>:1
msgid ""
":obj:`SetApplicationLanguage <pywws.Localisation.SetApplicationLanguage>`\\ "
"(params)"
msgstr ":obj:`SetApplicationLanguage <pywws.Localisation.SetApplicationLanguage>`\\ (params)"

#: ../../<autosummary>:1 ../../src/pywws/Localisation.pydocstring of
#: pywws.Localisation.SetApplicationLanguage:1
msgid "Set the locale and translation for a pywws program."
msgstr "Défini la langue locale et la traduction pour un programme pywws."

#: ../../<autosummary>:1
msgid ":obj:`SetLocale <pywws.Localisation.SetLocale>`\\ (lang)"
msgstr ":obj:`SetLocale <pywws.Localisation.SetLocale>`\\ (lang)"

#: ../../<autosummary>:1 ../../src/pywws/Localisation.pydocstring of
#: pywws.Localisation.SetLocale:1
msgid "Set the 'locale' used by a program."
msgstr "Régle la langue 'locale' utilisée par un programme."

#: ../../<autosummary>:1
msgid ":obj:`SetTranslation <pywws.Localisation.SetTranslation>`\\ (lang)"
msgstr ":obj:`SetTranslation <pywws.Localisation.SetTranslation>`\\ (lang)"

#: ../../<autosummary>:1 ../../src/pywws/Localisation.pydocstring of
#: pywws.Localisation.SetTranslation:1
msgid "Set the translation used by (some) pywws modules."
msgstr "Régle la traduction utilisée par les modules (certains) pywws."

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.Localisation.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.Localisation.main>`\\ ([argv])"

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation.SetLocale:3
msgid ""
"This affects the entire application, changing the way dates, currencies and "
"numbers are represented. It should not be called from a library routine that"
" may be used in another program."
msgstr "Cela affecte toute l'application, en changeant la façon dont les dates, les devises et les chiffres sont représentés. Il ne devrait pas être appelée à partir d'une routine de bibliothèque qui peut être utilisée dans un autre programme."

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation.SetLocale:7
msgid ""
"The ``lang`` parameter can be any string that is recognised by "
"``locale.setlocale()``, for example ``en``, ``en_GB`` or ``en_GB.UTF-8``."
msgstr "Le paramètre ``lang`` peut être n'importe quelle chaîne reconnue par ``locale.setlocale ()``, par exemple ``en``, ``fr_FR`` ou ``fr_FR.UTF-8``."

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation.SetLocale:10
#: ../../src/pywws/Localisation.pydocstring of
#: pywws.Localisation.SetTranslation:12
msgid "language code."
msgstr "code de langue."

#: ../../src/pywws/Localisation.pydocstring of pywws.Localisation.SetLocale:12
#: ../../src/pywws/Localisation.pydocstring of
#: pywws.Localisation.SetTranslation:14
#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive.write_byte:11
#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice.write_data:7
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice.write_data:7
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice.write_data:10
#: ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb.USBDevice.write_data:10
#: ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1.USBDevice.write_data:10
msgid "success status."
msgstr "état succès."

#: ../../src/pywws/Localisation.pydocstring of
#: pywws.Localisation.SetTranslation:3
msgid ""
"This sets the translation object ``Localisation.translation`` to use a "
"particular language."
msgstr "Ceci définit l'objet de la traduction ``Localisation.translation`` à utiliser une langue particulière."

#: ../../src/pywws/Localisation.pydocstring of
#: pywws.Localisation.SetTranslation:6
msgid ""
"The ``lang`` parameter can be any string of the form ``en``, ``en_GB`` or "
"``en_GB.UTF-8``. Anything after a ``.`` character is ignored. In the case of"
" a string such as ``en_GB``, the routine will search for an ``en_GB`` "
"language file before searching for an ``en`` one."
msgstr "Le paramètre ``lang`` peut être une chaîne sous la forme ``en``, `` fr_FR`` ou ``fr_FR.UTF-8``. Tout ce qui suit un caractère ``.`` est ignoré. Dans le cas d'une chaîne telle que ``fr_FR``, la routine va rechercher un fichier de langue ``fr_FR`` avant de chercher un ``fr``."

#: ../../src/pywws/Localisation.pydocstring of
#: pywws.Localisation.SetApplicationLanguage:3
msgid ""
"This function reads the language from the configuration file, then calls "
":func:`SetLocale` and :func:`SetTranslation`."
msgstr "Cette fonction permet de lire la langue à partir du fichier de configuration, puis appel les fonctions :func:`SetLocale` et :func:`SetTranslation`."

#: ../../src/pywws/Localisation.pydocstring of
#: pywws.Localisation.SetApplicationLanguage:6
msgid "a :class:`pywws.DataStore.params` object."
msgstr "un objet :class:`pywws.DataStore.params`."

#: ../../src/doc/api/pywws.LogData.rst:2
msgid "pywws.LogData"
msgstr "pywws.LogData"

#: ../../src/pywws/LogData.pydocstring of pywws.LogData:1
msgid "Save weather station history to file ::"
msgstr "Enregistre l'historique de la station météo dans un fichier ::"

#: ../../src/pywws/LogData.pydocstring of pywws.LogData:14
msgid ""
"This module gets data from the weather station's memory and stores it to "
"file. Each time it is run it fetches all data that is newer than the last "
"stored data, so it only needs to be run every hour or so. As the weather "
"station typically stores two weeks' readings (depending on the logging "
"interval), :py:mod:`pywws.LogData` could be run quite infrequently if you "
"don't need up-to-date data."
msgstr "Ce module reçoit les données de la mémoire de la station météorologique et les stocke dans un fichier. Chaque fois qu'il est exécuté, il récupère toutes les données plus récents que les dernières données stockées, de sorte qu'il ne nécessite d'être exécuté qu'environ toutes les heures. Comme la station météo stocke généralement les lectures de deux semaines (en fonction de l’intervalle d’enregistrement), :py:mod:`pywws.LogData` pourrait être exécuté très rarement si vous n’avez pas besoin de données à jour."

#: ../../src/pywws/LogData.pydocstring of pywws.LogData:21
msgid ""
"There is no date or time information in the raw weather station data, so "
":py:mod:`pywws.LogData` creates a time stamp for each reading. It uses the "
"computer's clock, rather than the weather station clock which can not be "
"read accurately by the computer. A networked computer should have its clock "
"set accurately by `ntp "
"<http://en.wikipedia.org/wiki/Network_Time_Protocol>`_."
msgstr "Il n’y a aucune information de date ou d’heure dans les données brutes de la station météo, donc :py:mod:`pywws.LogData` crée un horodatage pour chaque lecture.  Il utilise l’horloge de l’ordinateur, plutôt que l’horloge de la station météorologique qui ne peut être lu avec précision par l’ordinateur.  Un ordinateur en réseau devrait avoir son horloge réglée avec précision par  `ntp <http://fr.wikipedia.org/wiki/Network_Time_Protocol>`_."

#: ../../src/pywws/LogData.pydocstring of pywws.LogData:28
msgid ""
"Synchronisation with the weather station is achieved by waiting for a change"
" in the current data. There are two levels of synchronisation, set by the "
"config file or a command line option. Level 0 is quicker, but is only "
"accurate to around twelve seconds. Level 1 waits until the weather station "
"stores a new logged record, and gets time stamps accurate to a couple of "
"seconds. Note that this could take a long time, if the logging interval is "
"greater than the recommended five minutes."
msgstr "La synchronisation avec la station météo est obtenue par l'attente d'un changement dans les données en cours. Il y a deux niveaux de synchronisation, fixés par le fichier de configuration ou une option de ligne de commande. Le niveau 0 est plus rapide, mais n'est exacte qu'à environ douze secondes. Le niveau 1 attend jusqu'à ce que la station météo enregistre un nouvel enregistrement, et obtient un horodatage précis sur quelque secondes. Notez que cela peut prendre un certain temps, si l'intervalle d'enregistrement est supérieur aux cinq minutes recommandées."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.LogData.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.LogData.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.LogData.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.LogData.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ""
":obj:`DataLogger <pywws.LogData.DataLogger>`\\ (params, status, raw_data)"
msgstr ":obj:`DataLogger <pywws.LogData.DataLogger>`\\ (params, status, raw_data)"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.LogData.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.LogData.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.LogData.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.LogData.timedelta>`\\"

#: ../../<autosummary>:1
msgid ""
":obj:`weather_station <pywws.LogData.weather_station>`\\ ([ws_type, status, "
"avoid])"
msgstr ":obj:`weather_station <pywws.LogData.weather_station>`\\ ([ws_type, status, avoid])"

#: ../../<autosummary>:1 ../../<autosummary>:1
#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station:1
msgid "Class that represents the weather station to user program."
msgstr "Classe qui représente la station météo pour le programme utilisateur."

#: ../../src/doc/api/pywws.Logger.rst:2
msgid "pywws.Logger"
msgstr "pywws.Logger"

#: ../../src/pywws/Logger.pydocstring of pywws.Logger:1
msgid "Common code for logging info and errors."
msgstr "Code commun pour l'enregistrement d'informations et d'erreurs."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.Logger.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.Logger.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../src/doc/api/pywws.Plot.rst:2
msgid "pywws.Plot"
msgstr "pywws.Plot"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:1
msgid "Plot graphs of weather data according to an XML recipe ::"
msgstr "Trace les graphes de données météorologiques selon une recette XML."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:17
msgid ""
"Like :py:mod:`pywws.Template` this is one of the more difficult to use "
"modules in the weather station software collection. It plots a graph (or set"
" of graphs) of weather data. Almost everything about the graph is controlled"
" by an XML file. I refer to these files as templates, but they aren't "
"templates in the same sense as :py:mod:`pywws.Template` uses to create text "
"files."
msgstr "Comme :py:mod:`pywws.Template` c'est l’un des modules les plus difficiles à utiliser dans la collection du logiciel de station météo.  Il trace un graphe (ou un ensemble de graphiques) de données météorologiques.  Presque tout sur le graphe est contrôlée par un fichier XML.  Je réfère à ces fichiers en tant que modèles, mais ils ne sont pas des modèles dans le même sens qu'utilisé par :py:mod:`pywws.Template` pour créer des fichiers texte."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:24
msgid ""
"Before writing your own graph template files, it might be useful to look at "
"some of the examples in the example_graph_templates directory. If (like I "
"was) you are unfamiliar with XML, I suggest reading the W3 Schools XML "
"tutorial."
msgstr "Avant d'écrire vos propres fichiers de gabarit de graphe, il pourrait être utile d'examiner quelques exemples dans le répertoire example_graph_templates. Si (comme moi) vous n'êtes pas familier avec le langage XML, je vous suggère de lire le tutoriel XML du Site du Zéro."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:30
#: ../../src/pywws/Template.pydocstring of pywws.Template:34
msgid "Text encoding"
msgstr "Encodage du texte"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:32
msgid ""
"The ``[config]`` section of :ref:`weather.ini <weather_ini-config>` has a "
"``gnuplot encoding`` entry that sets the text encoding pywws uses to write a"
" gnuplot command file. The default value, ``iso_8859_1``, is suitable for "
"most western European languages, but may need changing if you use another "
"language. It can be set to any text encoding recognised by both the Python "
":py:mod:`codecs` module and the `gnuplot "
"<http://www.gnuplot.info/documentation.html>`_ ``set encoding`` command. If "
"Python and gnuplot have different names for the same encoding, give both "
"names separated by a space, Python name first. For example::"
msgstr "La section ``[config]`` du fichier :ref:`weather.ini <weather_ini-config>` contient une entrée ``gnuplot encoding`` qui définit l'encodage de texte qu'utilise pywws pour écrire un fichier de commande gnuplot. La valeur par défaut, ``iso_8859_1``, convient pour la plupart des langues d’Europe occidentale, mais peut nécessiter modifications si vous utilisez une autre langue.  Elle peut être définie à n’importe quel codage de texte reconnu par les deux modules Python :py:mod:`codecs` et la commande `gnuplot <http://www.gnuplot.info/documentation.html>`_ ``set encoding``.  Si Python et gnuplot ont des noms différents pour le même codage, donner les deux noms séparés par un espace, le nom Python d’abord.  Par exemple::"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:45
msgid ""
"Note that you need to choose an encoding for which ``gnuplot`` has a "
"suitable font. You may need to set the font with a terminal_ element. Note "
"also that this encoding is unrelated to the encoding of your XML graph file,"
" which is set in the XML header."
msgstr "Notez que vous devez choisir un codage pour lequel ``gnuplot`` a une police appropriée.  Vous devrez peut-être définir la police par un élément terminal_.  Notez également que ce codage n'est pas lié à l’encodage de votre fichier de graphique XML, qui est définie dans l’en-tête XML."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:51
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:29
msgid "XML graph file syntax"
msgstr "Syntaxe XML du fichier graphe"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:53
msgid ""
"Here is the simplest useful graph template. It plots the external "
"temperature for the last 24 hours. ::"
msgstr "Voici le modèle de graphe utile le plus simple. Il trace la température extérieure pendant les 24 dernières heures. ::"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:66
msgid ""
"In this example, the root element graph has one plot element, which has one "
"subplot element. The subplot element contains a title element and a ycalc "
"element. To plot more data on the same graph (for example dew point and "
"temperature), we can add more subplot elements. To plot more than one graph "
"(for example wind speed is measured in different units from temperature) in "
"the same file we can add more plot elements."
msgstr "Dans cet exemple, l’élément graphique racine a un élément de tracé, qui possède un élément de tracé secondaire.  L’élément de tracé secondaire contient un élément title et un élément ycalc.  Pour tracer plus de données sur le même graphe (point de rosée et la température, par exemple), nous pouvons ajouter plusieurs éléments de tracé secondaire.  Pour établir plus d’une courbe (par exemple vitesse du vent est mesurée en unités différentes de la température) dans le même fichier, nous pouvons ajouter plusieurs éléments de tracé."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:73
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:44
msgid "The complete element hierarchy is shown below."
msgstr "La hiérarchie complète de l'élément est illustré ci-dessous."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:75
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:46
msgid "graph_"
msgstr "graph_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:76
msgid "plot_"
msgstr "plot_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:77
msgid "subplot_"
msgstr "subplot_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:78
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:48
msgid "xcalc_"
msgstr "xcalc_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:79
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:49
msgid "ycalc_"
msgstr "ycalc_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:80
msgid "axes_"
msgstr "axes_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:81
msgid "style_"
msgstr "style_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:82
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:51
msgid "colour_"
msgstr "colour_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:83
msgid ":ref:`title <subplot-title>`"
msgstr ":ref:`title <subplot-title>`"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:84
msgid "bmargin_"
msgstr "bmargin_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:85
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:52
msgid "yrange_"
msgstr "yrange_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:86
msgid "y2range_"
msgstr "y2range_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:87
msgid "ytics_"
msgstr "ytics_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:88
msgid "y2tics_"
msgstr "y2tics_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:89
msgid "ylabel_"
msgstr "ylabel_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:90
msgid "ylabelangle_"
msgstr "ylabelangle_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:91
msgid "y2label_"
msgstr "y2label_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:92
msgid "y2labelangle_"
msgstr "y2labelangle_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:93
msgid "grid_"
msgstr "grid_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:94
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:54
msgid "source_"
msgstr "source_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:95
msgid "boxwidth_"
msgstr "boxwidth_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:96
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:55
msgid ":ref:`title <plot-title>`"
msgstr ":ref:`title <plot-title>`"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:97
msgid "command_"
msgstr "command_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:98
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:56
msgid "start_"
msgstr "start_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:99
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:57
msgid "stop_"
msgstr "stop_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:100
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:58
msgid "duration_"
msgstr "duration_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:101
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:59
msgid "layout_"
msgstr "layout_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:102
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:60
msgid "size_"
msgstr "size_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:103
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:61
msgid "fileformat_"
msgstr "fileformat_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:104
msgid "terminal_"
msgstr "terminal_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:105
msgid "lmargin_"
msgstr "lmargin_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:106
msgid "rmargin_"
msgstr "rmargin_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:107
msgid "xformat_"
msgstr "xformat_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:108
msgid "xlabel_"
msgstr "xlabel_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:109
msgid "dateformat_"
msgstr "dateformat_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:110
msgid "xtics_"
msgstr "xtics_"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:111
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:63
msgid ":ref:`title <graph-title>`"
msgstr ":ref:`title <graph-title>`"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:114
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:66
msgid "graph"
msgstr "graph"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:116
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:68
msgid ""
"This is the root element of the graph XML file. It does not have to be "
"called \"graph\", but there must be exactly one root element."
msgstr "C'est l'élément racine du fichier XML de graphe. Il n'a pas à être appelé \"graph \", mais il doit y avoir exactement un élément racine."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:120
msgid "plot"
msgstr "plot"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:122
msgid ""
"Every graph element should contain at least one plot element. A separate "
"graph is drawn for each plot element, but all share the same X axis."
msgstr "Chaque élément graphe doit contenir au moins un élément de tracé. Un graphe distinct est établi pour chaque élément de tracé, mais tous partagent le même axe X."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:127
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:72
msgid "start"
msgstr "start"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:129
msgid ""
"This element sets the date & time of the start of the X axis. It is used in "
"the ``replace`` method of a Python datetime object that is initialised to "
"00:00 hours on the date of the latest weather station hourly reading. For "
"example, to start the graph at noon (local time) on Christmas day 2008: "
"``<start>year=2008, month=12, day=25, hour=12</start>`` or to start the "
"graph at 2am (local time) today: ``<start>hour=2</start>``. The default "
"value is (stop - duration)."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:137
msgid ""
"previously the ``<start>`` and ``<stop>`` elements were used in a datetime "
"constructor, so ``year``, ``month`` and ``day`` values were required."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:143
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:80
msgid "stop"
msgstr "stop"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:145
msgid ""
"This element sets the date & time of the end of the X axis. It is used in "
"the ``replace`` method of a Python datetime object, just like ``<start>``. "
"The default value is (start + duration), unless start is not defined, in "
"which case the timestamp of the latest weather station hourly reading is "
"used."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:152
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:90
msgid "duration"
msgstr "duration"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:154
msgid ""
"This element sets the extent of the X axis of the graph, unless both start "
"and stop are defined. It is used in the constructor of a Python timedelta "
"object. For example, to plot one week: ``<duration>weeks=1</duration>``. The"
" default value is hours=24."
msgstr "Cet élément définit l'étendue de l'axe X du graphique, à moins que start (début) et stop (arrêt) soient tous deux définis. Il est utilisé dans le construction d'un objet Python timedelta. Par exemple, pour tracer une semaine: ``<duration>weeks=1</duration>``. La valeur par défaut est hours=24."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:160
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:98
msgid "layout"
msgstr "layout"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:162
msgid ""
"Controls the layout of the plots. Default is a single column. The layout "
"element specifies rows and columns. For example: ``<layout>4, 2</layout>`` "
"will use a grid of 4 rows and 2 columns."
msgstr "Contrôle la disposition des tracés. Par défaut sur une seule colonne. L'élément de mise en page définit les lignes et les colonnes. Par exemple: ``<layout>4, 2</layout>`` utilisera une grille de 4 lignes et 2 colonnes."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:167
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:106
msgid "size"
msgstr "size"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:169
msgid ""
"Sets the overall dimensions of the image file containing the graph. Default "
"(in a single column layout) is a width of 600 pixels and height of 200 "
"pixels for each plot, so a graph with four plot elements would be 600 x 800 "
"pixels. Any size element must include both width and height. For example: "
"``<size>800, 600</size>`` will produce an image 800 pixels wide and 600 "
"pixels high."
msgstr "Définit les dimensions globales du fichier image contenant le graphe. Par défaut (dans une mise en page à simple colonne) une largeur de 600 pixels et une hauteur de 200 pixels pour chaque tracé est employé, donc la dimension d'un graphe avec quatre éléments tracés serait de 600 x 800 pixels. Tout élément de taille doit inclure à la fois la largeur et la hauteur. Par exemple: ``<size>800, 600</size>`` produira une image 800 pixels de large et 600 pixels de haut."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:177
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:115
msgid "fileformat"
msgstr "fileformat"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:179
msgid ""
"Sets the image format of the file containing the graph. Default is ``png``. "
"Any string recognised by your installation of gnuplot should do. For "
"example: ``<fileformat>gif</fileformat>`` will produce a GIF image."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:184
msgid ""
"If your installation of gnuplot supports it, ``pngcairo`` is an alternative "
"to ``png`` that can yield much better looking results."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:187
msgid ""
"You can also set terminal_ options in this string, for example: "
"``<fileformat>pngcairo font \"arial,8\" rounded</fileformat>`` will use a "
"small \"Arial\" font and round the ends of line segments."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:193
msgid "terminal"
msgstr "terminal"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:195
msgid ""
"Allows complete control of gnuplot's \"terminal\" settings. You may want to "
"use this if you are plotting to an unusual image format. Any string "
"recognised by your installation of gnuplot's 'set terminal' command should "
"do. For example: ``<terminal>svg enhanced font \"arial,9\" dynamic rounded "
"size 600,800</terminal>``. This setting overwrites both size_ and "
"fileformat_."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:202
msgid ""
"The size_ and fileformat_ elements are now the preferred way to set the "
"gnuplot \"terminal\"."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:207
msgid "lmargin"
msgstr "lmargin"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:209
msgid ""
"Sets the left margin of the plots, i.e. the distance from the left hand axis"
" to the left hand edge of the image area. According to the gnuplot "
"documentation the units of lmargin are character widths. The default value "
"is 5, which should look OK in most circumstances."
msgstr "Définit la marge gauche des graphes, c'est à dire la distance entre l'axe de gauche sur le bord gauche de la zone de l'image. Selon la documentation de gnuplot les unités de lmargin sont des largeurs de caractères. La valeur par défaut est de 5, ce qui devrait être OK dans la plupart des circonstances."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:215
msgid "rmargin"
msgstr "rmargin"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:217
msgid ""
"Sets the right margin of the plots, i.e. the distance from the right hand "
"axis to the right hand edge of the image area. According to the gnuplot "
"documentation the units of rmargin are character widths. The default value "
"is -1, which sets automatic adjustment."
msgstr "Définit la marge droite des graphes, c'est à dire la distance entre l'axe de droite à l'extrémité droite de la zone d'image. Selon la documentation de gnuplot les unités de rmargin sont des largeurs de caractères. La valeur par défaut est -1, ce qui spécifie le réglage automatique."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:223
msgid "xformat"
msgstr "xformat"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:225
msgid ""
"Sets the format of the time / date xtic labels. The value is a strftime "
"style format string. Default depends on the graph duration: 24 hours or less"
" is \"%H%M\", 24 hours to 7 days is \"%a %d\" and 7 days or more is "
"\"%Y/%m/%d\"."
msgstr "Définit le format des étiquettes de date / heure xtic. La valeur est une chaîne de style format strftime. Par défaut elle dépend de la durée du graphe: 24 heures ou moins est \"%H%M\", 24 heures sur 7 jours est \"%a% d\" et 7 jours ou plus est \"%Y/%m/%d\"."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:231
msgid "xlabel"
msgstr "xlabel"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:233
msgid ""
"Sets the X axis label. The value is a strftime style format string. Default "
"depends on the graph duration: 24 hours or less is \"Time (%Z)\", 24 hours "
"to 7 days is \"Day\" and 7 days or more is \"Date\". The datetime used to "
"compute this is start, which may produce unexpected results when a graph "
"spans DST start or end."
msgstr "Définit l'étiquette d'axe X. La valeur est une chaîne de style format strftime. Par défaut dépend de la durée du graphe: 24 heures ou moins est \"Time (%Z)\", de 24 heures à 7 jours est «Day» et 7 jours ou plus est «Date». Le datetime utilisé pour calculer ce départ, ce qui peut produire des résultats inattendus lorsqu'un graphique s'étend de début ou de fin DST."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:240
msgid "dateformat"
msgstr "dateformat"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:242
msgid ""
"Sets the format of the date labels at each end of X axis. The value is a "
"strftime style format string. Default is \"%Y/%m/%d\". The right hand label "
"is only drawn if it differs from the left. To have no labels, set an empty "
"format: ``<dateformat></dateformat>``"
msgstr "Définit le format des étiquettes de date à chaque extrémité de l'axe X. La valeur est une chaîne de style format strftime. Par défaut est \"%Y/%m/%d\". L'étiquette de droite est uniquement affichée si elle diffère de la gauche. Pour avoir aucune étiquette, définissez un format vide: ``<dateformat></dateformat>``"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:248
msgid "xtics"
msgstr "xtics"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:250
msgid ""
"Sets the spacing of the \"tic\" marks on the X axis. The value is an integer"
" number of hours. The default is to allow gnuplot to set an appropriate "
"interval."
msgstr "Définit l'espacement des \"tic\" des marques sur l'axe X. La valeur est un nombre entier d'heures. La valeur par défaut est de laisser gnuplot définir l'intervalle approprié."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:257
#: ../../src/pywws/Plot.pydocstring of pywws.Plot:381
#: ../../src/pywws/Plot.pydocstring of pywws.Plot:460
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:133
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:219
msgid "title"
msgstr "title"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:259
msgid ""
"Sets the title of the graph. A single line of text, for example: "
"``<title>Today's weather</title>``. This title appears at the very top of "
"the graph, outside any plot area."
msgstr "Définit le titre du graphe. Une seule ligne de texte, par exemple: ``<title>La météo du jour</ title>``. Ce titre apparaît tout en haut du graphe, en dehors de toute zone de traçage."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:263
msgid ""
"If the title contains any \"%\" characters it will be used as a strftime "
"style format string for the datetime of the stop value. This allows you to "
"include the graph's date or time in the title."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:269
msgid "subplot"
msgstr "subplot"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:271
msgid ""
"Every plot element should contain at least one subplot element. A separate "
"trace is drawn for each subplot element, but all share the same X and Y "
"axes."
msgstr "Chaque élément du graphe doit contenir au moins un élément graphe secondaire. Une tracé distinct est établi pour chaque élément sous-graphe, mais tous partagent les même axes X et Y."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:276
msgid "bmargin"
msgstr "bmargin"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:278
msgid ""
"Sets the bottom margin, i.e. the spacing between the lower X axis and the "
"edge of the graph (or the next plot). The default is to let gnuplot adjust "
"this automatically, which works OK most of the time but you may wish to fine"
" tune the value to suit your installation."
msgstr "Définit la marge inférieure, c'est à dire la distance entre la partie inférieure de l'axe X et le bord du graphique (ou le graphe suivante). La valeur par défaut est de laisser gnuplot ajuster automatiquement, ce qui fonctionne bien la plupart du temps, mais vous pouvez ajuster la valeur en fonction de votre installation."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:283
msgid ""
"The permitted value is any non-negative real number. On my setup 0.9 is a "
"good value, set as follows: ``<bmargin>0.9</bmargin>``."
msgstr "La valeur autorisée est un nombre non négatif réel. Sur mon installation 0.9 est une bonne valeur, définie comme suit: ``<bmargin> 0.9</ bmargin>``."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:287
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:191
msgid "yrange"
msgstr "yrange"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:289
msgid ""
"Sets the lower and upper limits of the (left hand) Y axis. The value is "
"anything understood by gnuplot, typically a pair of numbers. The default is "
"to allow gnuplot to set appropriate values, which is unlikely to be what you"
" want. For example, to plot typical UK temperatures with no value going off "
"the graph: ``<yrange>-10, 30</yrange>``. Note that commas are converted to "
"colons, so ``<yrange>-10:30</yrange>`` would be equivalent."
msgstr "Définit les limites inférieure et supérieure de l'axe Y gauche. La valeur est tout ce qui est recconnu par gnuplot, généralement une paire de nombres. La valeur par défaut est de permettre à gnuplot de définir les valeurs appropriées, ce qui est peu susceptible d'être ce que vous voulez. Par exemple, pour tracer des températures typiques du Royaume-Uni sans valeur va hors du graphe: ``<yrange>-10, 30</yrange>``. Notez que les virgules sont converties en deux points, donc ``<yrange>10:30</ yrange>`` serait équivalent."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:297
msgid ""
"You can use an asterisk to have gnuplot choose a suitable value. For "
"example, to have the upper value auto scale whilst fixing the lower value at"
" zero, use ``<yrange>0:*</yrange>``."
msgstr "Vous pouvez utiliser un astérisque pour laisser gnuplot choisir une valeur appropriée. Par exemple, pour automatiser l'échelle de valeur supérieure, tout en fixant la valeur inférieure à zéro, utilisez ``<yrange>0:*</yrange>``."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:302
msgid "y2range"
msgstr "y2range"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:304
msgid ""
"Sets the lower and upper limits of the right hand Y axis. Default is for the"
" right hand Y axis to be the same as the left, but setting a different range"
" is useful in dual axis plotting."
msgstr "Définit les limites inférieure et supérieure de l'axe Y de droite. Le défaut est pour l'axe Y de droite d'être la même que celle de gauche, mais fixer une plage différente est utile en double axe de traçage."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:309
msgid "ytics"
msgstr "ytics"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:311
msgid ""
"Controls the \"tic\" marks on the left hand Y axis. The value can be "
"anything that's understood by gnuplot. For example, to set the tic spacing "
"to 45 use ``<ytics>45</ytics>``. More complex things are also possible, e.g."
" to label a wind direction graph with compass points, use ``<y2tics>('N' 0, "
"'E' 90, 'S' 180, 'W' 270, 'N' 360)</y2tics>``."
msgstr "Contrôle les \"tic\" des marques sur l'axe Y de gauche. La valeur peut être tout ce qui est compris par gnuplot. Par exemple, pour définir l'espacement tic à 45 utiliser ``<ytics>45</ ytics>``. Des choses plus complexes sont également possibles, par exemple étiqueter un diagramme de direction du vent avec des points de boussole, utilisez ``<y2tics>('N' 0, 'E' 90, 'S' 180, 'W' 270, 'N' 360)</ y2tics>``."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:318
msgid "y2tics"
msgstr "y2tics"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:320
msgid ""
"Controls the \"tic\" marks on the right hand axis. The format is the same as"
" that for ytics. Default behaviour is to copy the left hand tic marks, but "
"without labels."
msgstr "Contrôle les \"tic\" des marques sur l'axe de droite. Le format est le même que celui de ytics. Le comportement par défaut consiste à copier les marques de graduation de gauche, mais sans étiquette."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:325
msgid "ylabel"
msgstr "ylabel"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:327
msgid ""
"Adds a label to the (left hand) Y axis. For example, when plotting "
"temperature: ``<ylabel>°C</ylabel>``. If you use ylabel you will probably "
"want to adjust lmargin."
msgstr "Ajoute une étiquette à gauche de l'axe Y. Par exemple, lors du tracé de la température: ``<ylabel>°C</ylabel>``. Si vous utilisez ylabel vous voudrez probablement ajuster lmargin."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:332
msgid "ylabelangle"
msgstr "ylabelangle"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:334
msgid ""
"Adjust the angle of the (left hand) Y axis label, if your version of gnuplot"
" supports it. For example, to write the label horizontally: "
"``<ylabelangle>90</ylabelangle>``."
msgstr "Ajuste l'angle de l'étiquette à gauche de l'axe Y, si votre version de gnuplot le soutient. Par exemple, pour écrire l'étiquette horizontalement: ``<ylabelangle>90</ylabelangle>``."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:339
msgid "y2label"
msgstr "y2label"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:341
msgid ""
"Adds a label to the right hand Y axis. For example, when plotting humidity: "
"``<y2label>%</y2label>``. This is mostly used when plotting dual axis "
"graphs. If you use y2label you will probably want to adjust rmargin."
msgstr "Ajoute une étiquette à l'axe Y de droite. Par exemple, lors du tracé de l'humidité: ``<y2label>%</y2label>``. Cela est principalement utilisé lors du traçage de graphes à deux axes. Si vous utilisez y2label vous voudrez probablement ajuster rmargin."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:347
msgid "y2labelangle"
msgstr "y2labelangle"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:349
msgid ""
"Adjust the angle of the right hand Y axis label, if your version of gnuplot "
"supports it. For example, to write the label horizontally: "
"``<y2labelangle>90</y2labelangle>``."
msgstr "Ajuste l'angle de l'étiquette d'axe Y à droite, si votre version de gnuplot le permet. Par exemple, pour écrire l'étiquette horizontalement: ``<y2labelangle>90</ y2labelangle>``."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:354
msgid "grid"
msgstr "grid"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:356
msgid ""
"Adds a grid to the plot. In most situations gnuplot's default grid is "
"suitable, so no value is needed: ``<grid></grid>``. More control is possible"
" using any of the options understood by gnuplot's set grid command. For "
"example, to have horizontal grid lines only: ``<grid>ytics</grid>``."
msgstr "Ajoute une grille au tracé. Dans la plupart des situations, la grille par défaut de gnuplot est appropriée, si aucune valeur n'est nécessaire: ``<grid></grid>``. Plus de contrôle est possible en utilisant l'une des options comprises par la commande set grid de gnuplot. Par exemple, pour avoir les lignes horizontales de la grille uniquement: ``<grid>ytics</grid>``."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:363
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:208
msgid "source"
msgstr "source"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:365
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:210
msgid ""
"Select the weather data to be plotted. Permitted values are "
"``<source>raw</source>``, ``<source>hourly</source>``, "
"``<source>daily</source>`` and ``<source>monthly</source>``. Default is raw."
" Note that the different sources have different data dictionaries, so this "
"choice affects ycalc."
msgstr "Sélectionne les données météorologiques à tracer. Les valeurs autorisées sont ``<source>raw</source>``, ``<source> hourly</ source>``, ``<source>daily</source>`` et ``<source>monthly</source>``. LA valeur par défaut est raw. Notez que les sources différentes ont des dictionnaires de données différents, donc ce choix affecte ycalc."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:372
msgid "boxwidth"
msgstr "boxwidth"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:374
msgid ""
"Sets the width of the \"boxes\" used when drawing bar graphs. The value is "
"an integer expression yielding a number of seconds. Default depends on "
"source: raw is 240, hourly is 2800 and daily is 2800 * 24."
msgstr "Définit la largeur des \"boîtes\" utilisés lors de l'élaboration des graphes à barres. La valeur est une expression entière pour obtenir un nombre de secondes. Le défaut dépend de la source: brut est de 240, horaire est de 2800 et quotidien est de 2800 * 24."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:383
msgid ""
"Sets the title of the plot. A single line of text, for example: "
"``<title>Temperature (°C)</title>``. This title appears within the plot "
"area, above any :ref:`subplot titles <subplot-title>`."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:388
msgid "command"
msgstr "command"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:390
msgid ""
"Execute any gnuplot command, just before the main \"plot\" command. This "
"option allows advanced users to have greater control over the graph "
"appearance. The value is any valid gnuplot command, typically beginning with"
" the word set. For example: ``<command>set key tmargin center horizontal "
"width 1 noreverse enhanced autotitles box linetype -1 linewidth "
"1</command>``. (Don't ask me what this example does — I'm not an advanced "
"user)."
msgstr "Exécute n'importe quelle commande gnuplot, juste avant la principale commande de tracé. Cette option permet aux utilisateurs avancés d'avoir plus de contrôle sur l'apparence du graphe. La valeur est une commande gnuplot valide, généralement commençant par un ensemble de mots. Par exemple: ``<command>set key tmargin center horizontal width 1 noreverse enhanced autotitles box linetype -1 linewidth 1</ command>``. (Ne me demandez pas ce que cet exemple produit - Je ne suis pas un utilisateur avancé)."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:398
msgid "This element can be repeated to allow several things to be set."
msgstr "Cet élément peut être répété pour permettre plusieurs choses à régler."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:402
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:152
msgid "xcalc"
msgstr "xcalc"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:404
msgid ""
"Controls the X axis positioning of plotted data values. The default value of"
" data['idx'] is correct for most data, but there are some exceptions. For "
"example, when plotting bar charts of hourly rainfall, it's nice to centre "
"the bars on 30 minutes past the hour: "
"``<xcalc>data['idx'].replace(minute=30, second=0)</xcalc>``."
msgstr "Contrôle le positionnement de l'axe X du tracé des valeurs de données. La valeur par défaut de data['idx'] est correcte pour la plupart des données, mais il y a quelques exceptions. Par exemple, lors du tracé des diagrammes à barres de pluies horaires, il est bon de centrer les barres sur 30 minutes après l'heure:  ``<xcalc>data ['idx'].replace(minute=30, second=0)</ xcalc>``."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:411
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:162
msgid "ycalc"
msgstr "ycalc"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:413
msgid ""
"Selects the data to be plotted. Any one line Python expression that returns "
"a single float value can be used. At its simplest this just selects one "
"value from the \"data\" dictionary, for example: "
"``<ycalc>data['temp_out']</ycalc>`` plots the external temperature. More "
"complex expressions are possible, and some helper functions are provided. "
"For example: ``<ycalc>dew_point(data['temp_out'], data['hum_out'])</ycalc>``"
" plots the external dew point, and "
"``<ycalc>wind_mph(data['wind_ave'])</ycalc>`` plots the average wind speed "
"in miles per hour."
msgstr "Sélectionne les données à tracer. Toute expression Python sur une ligne retournant une valeur flottante simple peut être utilisée. Au plus simple ceci sélectionne une seule valeur du dictionnaire \"data\", par exemple: ``<ycalc>data['temp_out']</ycalc>`` trace la température extérieure. Des expressions plus complexes sont possibles, et certaines fonctions d'aide sont fournies. Par exemple: ``<ycalc>dew_point(data['temp_out'], data['hum_out'])</ ycalc>`` trace le point de rosée, et ``<ycalc>wind_mph(data['wind_ave'])</ycalc>`` trace la vitesse moyenne du vent en miles par heure."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:423
msgid ""
"Cumulative plots are also possible. The result of each ycalc computation is "
"stored and made available to the next computation in the variable "
"last_ycalc. This can be used with any data, but is most useful with "
"rainfall: ``<ycalc>data['rain'] + last_ycalc</ycalc>``."
msgstr "Les courbes cumulatives sont également possibles. Le résultat de chaque calcul ycalc est stocké et mis à la disposition du calcul suivant dans la variable last_ycalc. Ceci peut être utilisé avec toute donnée, mais il est plus utile avec des précipitations: ``<ycalc>data ['rain'] + last_ycalc</ ycalc>``."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:429
msgid "axes"
msgstr "axes"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:431
msgid ""
"Selects which Y axis the data is plotted against. Default is the left hand "
"axis, but the right hand axis can be chosen with: ``<axes>x1y2</axes>``. "
"This can be used in conjunction with y2range to plot two unrelated "
"quantities on one graph, for example temperature and humidity."
msgstr "Sélectionne contre quel axe Y les données sont tracées. Par défaut c'est l'axe de gauche, mais l'axe de droite peut être choisie avec: ``<axes>x1y2</ axes>``. Ceci peut être utilisé en conjonction avec y2range pour tracer deux quantités indépendantes sur une courbe, par exemple la température et de l'humidité."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:438
msgid "style"
msgstr "style"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:440
msgid ""
"Sets the line style for the graph. Default is a smooth continuous line, "
"thickness 1. To select a bar graph use: ``<style>box</style>``. To select "
"points without a connecting line use: ``<style>+</style>`` or "
"``<style>x</style>``. To select a line thickness 3 (for example) use: "
"``<style>line 3</style>``. The thickness of points can be set in a similar "
"fashion. For complete control (for advanced users) a full gnuplot style can "
"be set: ``<style>smooth unique lc 5 lw 3</style>``."
msgstr "Définit le style de ligne pour le graphe. Le défaut est une ligne continue lisse, d'épaisseur 1. Pour sélectionner un graphique à barres, utilisez: ``<style>box</ style>``. Pour sélectionner des points sans ligne de raccordement, utilisez: ``<style>+</ style>`` ou ``<style>x</ style>``. Pour sélectionner une épaisseur de ligne à 3 (par exemple): ``<style>line 3</ style>``. L'épaisseur des points peut être réglé de la même façon. Pour un contrôle complet (pour utilisateurs avancés) un style gnuplot complet peut être réglé ainsi: ``<style>smooth unique lc 5 lw 3</ style>``."

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:449
#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:181
msgid "colour"
msgstr "colour"

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:451
msgid ""
"Sets the colour of the subplot line or boxes. This can be in any form that "
"gnuplot accepts, typically a single integer or an rgb specification such as "
"``rgb \"cyan\"`` or ``rgb \"FF00FF\"``. The mapping of integer values to "
"colours is set by gnuplot. Default value is an ever incrementing integer."
msgstr ""

#: ../../src/pywws/Plot.pydocstring of pywws.Plot:462
msgid ""
"Sets the title of the subplot. A single line of text, for example: "
"``<title>Temperature (°C)</title>``. This title appears within the plot "
"area, next to a short segment of the line colour used for the subplot."
msgstr "Définit le titre du sous-graphe. Une seule ligne de texte, par exemple: ``<title>Température (°C)</ title>``. Ce titre apparaît dans la zone de graphe, à côté d'un court segment de la couleur de la ligne utilisée pour le sous-graphe."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.Plot.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.Plot.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`apparent_temp <pywws.Plot.apparent_temp>`\\ (temp, rh, wind)"
msgstr ":obj:`apparent_temp <pywws.Plot.apparent_temp>`\\ (temp, rh, wind)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../<autosummary>:1
msgid "Compute apparent temperature (real feel), using formula from"
msgstr "Calcule la température apparente (sensation réelle), en utilisant la formule de"

#: ../../<autosummary>:1
msgid ":obj:`cadhumidex <pywws.Plot.cadhumidex>`\\ (temp, humidity)"
msgstr ":obj:`cadhumidex <pywws.Plot.cadhumidex>`\\ (temp, humidité)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.cadhumidex:1
msgid "Calculate Humidity Index as per Canadian Weather Standards"
msgstr "Calcule l'Indice d'Humidité selon les Normes Météo Canadiennes "

#: ../../<autosummary>:1
msgid ":obj:`dew_point <pywws.Plot.dew_point>`\\ (temp, hum)"
msgstr ":obj:`dew_point <pywws.Plot.dew_point>`\\ (temp, hum)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.dew_point:1
msgid ""
"Compute dew point, using formula from "
"http://en.wikipedia.org/wiki/Dew_point."
msgstr "Calcule le point de rosée, en utilisant la formule provenant de http://en.wikipedia.org/wiki/Dew_point."

#: ../../<autosummary>:1
msgid ":obj:`illuminance_wm2 <pywws.Plot.illuminance_wm2>`\\ (lux)"
msgstr ":obj:`illuminance_wm2 <pywws.Plot.illuminance_wm2>`\\ (lux)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.illuminance_wm2:1
msgid ""
"Approximate conversion of illuminance in lux to solar radiation in W/m2"
msgstr "Conversion approximative de la luminosité en lux, au rayonnement solaire en W/m2"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.Plot.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.Plot.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`pressure_inhg <pywws.Plot.pressure_inhg>`\\ (hPa)"
msgstr ":obj:`pressure_inhg <pywws.Plot.pressure_inhg>`\\ (hPa)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.pressure_inhg:1
msgid "Convert pressure from hectopascals/millibar to inches of mercury"
msgstr "Converti la pression de hectopascals/millibars, à pouces de mercure"

#: ../../<autosummary>:1
msgid ":obj:`pressure_trend_text <pywws.Plot.pressure_trend_text>`\\ (trend)"
msgstr ":obj:`pressure_trend_text <pywws.Plot.pressure_trend_text>`\\ (trend)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.pressure_trend_text:1
msgid "Convert pressure trend to a string, as used by the UK met office."
msgstr "Converti la tendance de la pression en une chaîne, telle qu'utilisée par le UK Met Office."

#: ../../<autosummary>:1
msgid ":obj:`rain_inch <pywws.Plot.rain_inch>`\\ (mm)"
msgstr ":obj:`rain_inch <pywws.Plot.rain_inch>`\\ (mm)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.rain_inch:1
msgid "Convert rainfall from millimetres to inches"
msgstr "Converti les précipitations de millimètres, à pouces"

#: ../../<autosummary>:1
msgid ":obj:`temp_f <pywws.Plot.temp_f>`\\ (c)"
msgstr ":obj:`temp_f <pywws.Plot.temp_f>`\\ (c)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.temp_f:1
msgid "Convert temperature from Celsius to Fahrenheit"
msgstr "Converti la température de Celsius, à Fahrenheit"

#: ../../<autosummary>:1
msgid ":obj:`usaheatindex <pywws.Plot.usaheatindex>`\\ (temp, humidity, dew)"
msgstr ":obj:`usaheatindex <pywws.Plot.usaheatindex>`\\ (temp, humidité, point de rosée)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.usaheatindex:1
msgid "Calculate Heat Index as per USA National Weather Service Standards"
msgstr "Calcule l'Indice de Chaleur selon les normes du Service Météorologique National USA  "

#: ../../<autosummary>:1
msgid ":obj:`wind_bft <pywws.Plot.wind_bft>`\\ (ms)"
msgstr ":obj:`wind_bft <pywws.Plot.wind_bft>`\\ (ms)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.wind_bft:1
msgid "Convert wind from metres per second to Beaufort scale"
msgstr "Converti la vitesse du vent de mètres par seconde, vers l'échelle Beaufort"

#: ../../<autosummary>:1
msgid ":obj:`wind_chill <pywws.Plot.wind_chill>`\\ (temp, wind)"
msgstr ":obj:`wind_chill <pywws.Plot.wind_chill>`\\ (temp, vent)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1
msgid "Compute wind chill, using formula from"
msgstr "Calcule le refroidissement éolien, en utilisant la formule de"

#: ../../<autosummary>:1
msgid ":obj:`wind_kmph <pywws.Plot.wind_kmph>`\\ (ms)"
msgstr ":obj:`wind_kmph <pywws.Plot.wind_kmph>`\\ (ms)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.wind_kmph:1
msgid "Convert wind from metres per second to kilometres per hour"
msgstr "Converti la vitesse du vent de mètres par seconde, à kilomètres par heure"

#: ../../<autosummary>:1
msgid ":obj:`wind_kn <pywws.Plot.wind_kn>`\\ (ms)"
msgstr ":obj:`wind_kn <pywws.Plot.wind_kn>`\\ (ms)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.wind_kn:1
msgid "Convert wind from metres per second to knots"
msgstr "Converti la vitesse du vent de mètres par seconde, à noeuds"

#: ../../<autosummary>:1
msgid ":obj:`wind_mph <pywws.Plot.wind_mph>`\\ (ms)"
msgstr ":obj:`wind_mph <pywws.Plot.wind_mph>`\\ (ms)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.wind_mph:1
msgid "Convert wind from metres per second to miles per hour"
msgstr "Converti la vitesse du vent de mètres par seconde, en miles par heure"

#: ../../<autosummary>:1
msgid ""
":obj:`winddir_average <pywws.Plot.winddir_average>`\\ (data, threshold, "
"min_count)"
msgstr ""

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:1
msgid "Compute average wind direction (in degrees) for a slice of data."
msgstr "Calcul la direction moyenne du vent (en degrés) pour une tranche de données."

#: ../../<autosummary>:1
msgid ":obj:`winddir_degrees <pywws.Plot.winddir_degrees>`\\ (pts)"
msgstr ":obj:`winddir_degrees <pywws.Plot.winddir_degrees>`\\ (pts)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_degrees:1
msgid "Convert wind direction from 0..15 to degrees"
msgstr "Converti la direction du vent de 0..15 en degrés"

#: ../../<autosummary>:1
msgid ":obj:`winddir_text <pywws.Plot.winddir_text>`\\ (pts)"
msgstr ":obj:`winddir_text <pywws.Plot.winddir_text>`\\ (pts)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../<autosummary>:1 ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_text:1
msgid "Convert wind direction from 0..15 to compass point text"
msgstr "Converti la direction du vent de 0..15, en points cardinaux"

#: ../../<autosummary>:1
msgid ""
":obj:`BasePlotter <pywws.Plot.BasePlotter>`\\ (params, status, raw_data, "
"...)"
msgstr ":obj:`BasePlotter <pywws.Plot.BasePlotter>`\\ (params, status, raw_data, ...)"

#: ../../<autosummary>:1
msgid ":obj:`GraphFileReader <pywws.Plot.GraphFileReader>`\\ (input_file)"
msgstr ":obj:`GraphFileReader <pywws.Plot.GraphFileReader>`\\ (input_file)"

#: ../../<autosummary>:1
msgid ":obj:`GraphNode <pywws.Plot.GraphNode>`\\ (node)"
msgstr ":obj:`GraphNode <pywws.Plot.GraphNode>`\\ (node)"

#: ../../<autosummary>:1
msgid ""
":obj:`GraphPlotter <pywws.Plot.GraphPlotter>`\\ (params, status, raw_data, "
"...)"
msgstr ":obj:`GraphPlotter <pywws.Plot.GraphPlotter>`\\ (params, status, raw_data, ...)"

#: ../../<autosummary>:1
msgid ":obj:`Record <pywws.Plot.Record>`\\"
msgstr ":obj:`Record <pywws.Plot.Record>`\\"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.Plot.datetime>`\\ (year, month, day[, hour[, minute[, "
"...)"
msgstr ":obj:`datetime <pywws.Plot.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.Plot.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.Plot.timedelta>`\\"

#: ../../src/doc/api/pywws.Process.rst:2
msgid "pywws.Process"
msgstr "pywws.Process"

#: ../../src/pywws/Process.pydocstring of pywws.Process:1
msgid ""
"Generate hourly, daily & monthly summaries of raw weather station data ::"
msgstr "Génére des sommaires horaires, quotidiens et mensuels à partir des données brutes de la station météo ::"

#: ../../src/pywws/Process.pydocstring of pywws.Process:13
msgid ""
"This module takes raw weather station data (typically sampled every five or "
"ten minutes) and generates hourly, daily and monthly summary data, which is "
"useful when creating tables and graphs."
msgstr "Ce module prend les données brutes de la station météo (typiquement échantillonnées tous les cinq ou dix minutes) et génère des sommaires horaires, quotidiens et mensuels, ce qui est utile pour créer des tableaux et des graphes."

#: ../../src/pywws/Process.pydocstring of pywws.Process:17
msgid ""
"Before computing the data summaries, raw data is \"calibrated\" using a "
"user-programmable function. See :doc:`pywws.calib` for details."
msgstr "Avant de calculer les résumés de données, les données brutes sont \"calibrées\" en utilisant une fonction programmable par l'utilisateur. Voir :doc:`pywws.calib` pour plus de détails."

#: ../../src/pywws/Process.pydocstring of pywws.Process:20
msgid ""
"The hourly data is derived from all the records in one hour, e.g. from "
"18:00:00 to 18:59:59, and is given the index of the last complete record in "
"that hour."
msgstr "Les données horaire sont dérivées de tous les enregistrements lus en une heure, par exemple 18:00:00-18:59:59, et tien compte de l'indice du dernier relevé terminée à cette heure."

#: ../../src/pywws/Process.pydocstring of pywws.Process:24
msgid ""
"The daily data summarises the weather over a 24 hour period typically ending"
" at 2100 or 0900 hours, local (non DST) time, though midnight is another "
"popular convention. It is also indexed by the last complete record in the "
"period. Daytime and nightime, as used when computing maximum and minimum "
"temperatures, are assumed to start at 0900 and 2100 local time, or 1000 and "
"2200 when DST is in effect, regardless of the meteorological day."
msgstr "Les données quotidiennes résument la météo sur une période de 24 heures se terminant généralement à 2100 ou 0900 heures, heure locale (non heure d'été), bien que minuit est une autre convention populaire. Il est également indexé par le dernier enregistrement complet de la période. Le jour et la nuit, tels qu'utilisés dans le calcul des températures maximales et minimales, sont supposées commencer à 0900 et 2100 heure locale, soit 1000 et 2200 lorsque l'heure d'été est en vigueur, quel que soit le jour météorologique."

#: ../../src/pywws/Process.pydocstring of pywws.Process:32
msgid ""
"To adjust the meteorological day to your preference, or that used by your "
"local official weather station, edit the \"day end hour\" line in your "
"``weather.ini`` file, then run Reprocess.py to regenerate the summaries."
msgstr "Pour régler le jour météorologique à votre préférence, ou celle utilisée par votre station météorologique locale officielle, modifier la ligne  \"day end hour\" dans votre fichier ``weather.ini``, puis exécutez Reprocess.py pour régénérer les résumés."

#: ../../src/pywws/Process.pydocstring of pywws.Process:37
msgid ""
"Monthly summary data is computed from the daily summary data. If the "
"meteorological day does not end at midnight, then each month may begin and "
"end up to 12 hours before or after midnight."
msgstr "Les données récapitulatives mensuelles sont calculées à partir des données sommaires quotidiennes. Si la journée météorologique ne s'arrête pas à minuit, alors chaque mois peut commencer et se terminer jusqu'à 12 heures avant ou après minuit."

#: ../../src/pywws/Process.pydocstring of pywws.Process:41
msgid ""
"Wind speed data is averaged over the hour (or day) and the maximum gust "
"speed during the hour (or day) is recorded. The predominant wind direction "
"is calculated using vector arithmetic."
msgstr "La moyenne des données de vitesse du vent durant la dernière heure (ou jour) et la vitesse maximale des rafales pendant l'heure (ou jour) est enregistrée. La direction prédominante du vent est calculée en utilisant l'arithmétique vectorielle."

#: ../../src/pywws/Process.pydocstring of pywws.Process:45
msgid ""
"Rainfall is converted from the raw \"total since last reset\" figure to a "
"more useful total in the last hour, day or month."
msgstr "La pluie est convertie à partir des données brutes \"totale depuis la dernière réinitialisation\" chiffré à un total plus utile durant la dernière heure, un jour ou mois."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.Process.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.Process.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ""
":obj:`Process <pywws.Process.Process>`\\ (params, raw_data, calib_data, ...)"
msgstr ":obj:`Process <pywws.Process.Process>`\\ (params, raw_data, calib_data, ...)"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.Process:1
msgid "Generate summaries from raw weather station data."
msgstr "Génére les résumés de données brutes de la station météo."

#: ../../<autosummary>:1
msgid ""
":obj:`calibrate_data <pywws.Process.calibrate_data>`\\ (logger, params, "
"raw_data, ...)"
msgstr ":obj:`calibrate_data <pywws.Process.calibrate_data>`\\ (logger, params, raw_data, ...)"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.calibrate_data:1
msgid "'Calibrate' raw data, using a user-supplied function."
msgstr "Calibre les données brutes, en utilisant une fonction fournie par l'utilisateur."

#: ../../<autosummary>:1
msgid ""
":obj:`generate_daily <pywws.Process.generate_daily>`\\ (logger, "
"day_end_hour, ...)"
msgstr ":obj:`generate_daily <pywws.Process.generate_daily>`\\ (logger, day_end_hour, ...)"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.generate_daily:1
msgid "Generate daily summaries from calibrated and hourly data."
msgstr "Génére les résumés quotidiens à partir des données calibrées et horaires."

#: ../../<autosummary>:1
msgid ""
":obj:`generate_hourly <pywws.Process.generate_hourly>`\\ (logger, "
"calib_data, ...)"
msgstr ":obj:`generate_hourly <pywws.Process.generate_hourly>`\\ (logger, calib_data, ...)"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.generate_hourly:1
msgid "Generate hourly summaries from calibrated data."
msgstr "Génére les résumés horaire à partir des données calibrées."

#: ../../<autosummary>:1
msgid ""
":obj:`generate_monthly <pywws.Process.generate_monthly>`\\ (logger, "
"rain_day_threshold, ...)"
msgstr ":obj:`generate_monthly <pywws.Process.generate_monthly>`\\ (logger, rain_day_threshold, ...)"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.generate_monthly:1
msgid "Generate monthly summaries from daily data."
msgstr "Génère les résumés mensuels à partir des données quotidiennes."

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.Process.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.Process.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`Average <pywws.Process.Average>`\\ ()"
msgstr ":obj:`Average <pywws.Process.Average>`\\ ()"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.Average:1
msgid "Compute average of multiple data values."
msgstr "Calcule la moyenne des multiples valeurs de données."

#: ../../<autosummary>:1
msgid ":obj:`Calib <pywws.Process.Calib>`\\ (params, stored_data)"
msgstr ":obj:`Calib <pywws.Process.Calib>`\\ (params, stored_data)"

#: ../../<autosummary>:1 ../../<autosummary>:1 ../../<autosummary>:1
#: ../../src/pywws/calib.pydocstring of pywws.calib.Calib:1
msgid "Calibration class that implements default or user calibration."
msgstr "Classe qui implémente la calibration par défaut ou la calibration par l'utilisateur."

#: ../../<autosummary>:1
msgid ":obj:`DayAcc <pywws.Process.DayAcc>`\\ ()"
msgstr ":obj:`DayAcc <pywws.Process.DayAcc>`\\ ()"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.DayAcc:1
msgid "'Accumulate' weather data to produce daily summary."
msgstr "'Accumule' les données météorologiques pour produire le résumé quotidien."

#: ../../<autosummary>:1
msgid ":obj:`HourAcc <pywws.Process.HourAcc>`\\ (last_rain)"
msgstr ":obj:`HourAcc <pywws.Process.HourAcc>`\\ (last_rain)"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.HourAcc:1
msgid "'Accumulate' raw weather data to produce hourly summary."
msgstr "'Accumule' les données météorologiques brutes pour produire le récapitulatif horaire."

#: ../../<autosummary>:1
msgid ":obj:`Maximum <pywws.Process.Maximum>`\\ ()"
msgstr ":obj:`Maximum <pywws.Process.Maximum>`\\ ()"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.Maximum:1
msgid "Compute maximum value and timestamp of multiple data values."
msgstr "Calcule la valeur maximale ainsi que l'heure et la date des multiples valeurs de données."

#: ../../<autosummary>:1
msgid ":obj:`Minimum <pywws.Process.Minimum>`\\ ()"
msgstr ":obj:`Minimum <pywws.Process.Minimum>`\\ ()"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.Minimum:1
msgid "Compute minimum value and timestamp of multiple data values."
msgstr "Calcule la valeur minimale ainsi que l'heure et la date des multiples valeurs de données."

#: ../../<autosummary>:1
msgid ":obj:`MonthAcc <pywws.Process.MonthAcc>`\\ (rain_day_threshold)"
msgstr ":obj:`MonthAcc <pywws.Process.MonthAcc>`\\ (rain_day_threshold)"

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.MonthAcc:1
msgid "'Accumulate' daily weather data to produce monthly summary."
msgstr "'Accumule' les données météorologiques quotidiennes pour produire le sommaire mensuel."

#: ../../<autosummary>:1
msgid ":obj:`WindFilter <pywws.Process.WindFilter>`\\ ([decay])"
msgstr ""

#: ../../<autosummary>:1 ../../src/pywws/Process.pydocstring of
#: pywws.Process.WindFilter:1
msgid "Compute average wind speed and direction."
msgstr "Calcul la vitesse moyenne du vent et la direction."

#: ../../<autosummary>:1
msgid ":obj:`date <pywws.Process.date>`\\"
msgstr ":obj:`date <pywws.Process.date>`\\"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.Process.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.Process.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`deque <pywws.Process.deque>`\\"
msgstr ":obj:`deque <pywws.Process.deque>`\\"

#: ../../<autosummary>:1 ../../<autosummary>:1
msgid "deque([iterable[, maxlen]]) --> deque object"
msgstr "deque([iterable[, maxlen]]) --> deque object"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.Process.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.Process.timedelta>`\\"

#: ../../src/pywws/Process.pydocstring of pywws.Process.WindFilter:3
#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:3
msgid ""
"The wind speed and direction of each data item is converted to a vector "
"before averaging, so the result reflects the dominant wind direction during "
"the time period covered by the data."
msgstr ""

#: ../../src/pywws/Process.pydocstring of pywws.Process.WindFilter:7
#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:7
msgid ""
"Setting the ``decay`` parameter converts the filter from a simple averager "
"to one where the most recent sample carries the highest weight, and earlier "
"samples have a lower weight according to how long ago they were."
msgstr ""

#: ../../src/pywws/Process.pydocstring of pywws.Process.WindFilter:12
#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:12
msgid ""
"This process is an approximation of \"exponential smoothing\". See "
"`Wikipedia <http://en.wikipedia.org/wiki/Exponential_smoothing>`_ for a "
"detailed discussion."
msgstr ""

#: ../../src/pywws/Process.pydocstring of pywws.Process.WindFilter:16
#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:16
msgid ""
"The parameter ``decay`` corresponds to the value ``(1 - alpha)`` in the "
"Wikipedia description. Because the weather data being smoothed may not be at"
" regular intervals this parameter is the decay over 5 minutes. Weather data "
"at other intervals will have its weight scaled accordingly."
msgstr ""

#: ../../src/pywws/Process.pydocstring of pywws.Process.WindFilter:22
msgid "The return value is a (speed, direction) tuple."
msgstr "La valeur de retour est un tuple (vitesse, direction)."

#: ../../src/pywws/Process.pydocstring of pywws.Process.WindFilter:24
#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:39
msgid "filter coefficient decay rate."
msgstr ""

#: ../../src/pywws/Process.pydocstring of pywws.Process.HourAcc:3
msgid ""
"Compute average wind speed and maximum wind gust, find dominant wind "
"direction and compute total rainfall."
msgstr "Calcule la vitesse moyenne du vent et les rafales de vent maximales, trouve la direction des vents dominants et calcule les précipitations totales."

#: ../../src/pywws/Process.pydocstring of pywws.Process.DayAcc:3
msgid ""
"Compute average wind speed, maximum wind gust and daytime max & nighttime "
"min temperatures, find dominant wind direction and compute total rainfall."
msgstr "Calcule la vitesse moyenne du vent, la rafale maximale et les températures maximum de jour et minimum de nuit, trouve la direction du vent dominant et calcule les précipitations totales."

#: ../../src/pywws/Process.pydocstring of pywws.Process.DayAcc:7
msgid ""
"Daytime is assumed to be 0900-2100 and nighttime to be 2100-0900, local time"
" (1000-2200 and 2200-1000 during DST), regardless of the \"day end hour\" "
"setting."
msgstr "Le jour est supposé être entre 0900-2100 et la nuit entre 2100-0900, heure locale (1000-2200 et 2200-1000 au cours des heures d'été), quelle que soit le réglage de \"day end hour\"."

#: ../../src/pywws/Process.pydocstring of pywws.Process.MonthAcc:3
msgid "Compute daytime max & nighttime min temperatures."
msgstr "Calcule la température maximum le jour et le minimum la nuit."

#: ../../src/pywws/Process.pydocstring of pywws.Process.Process:3
msgid ""
"The meteorological day end (typically 2100 or 0900 local time) is set in the"
" preferences file ``weather.ini``. The default value is 2100 (2200 during "
"DST), following the historical convention for weather station readings."
msgstr "La fin de la journée météorologique (généralement 2100 ou 0900 heure locale) se trouve dans le fichier de configuration ``weather.ini``. La valeur par défaut est 2100 (2200 au cours de l'heure d'été), selon la convention historique pour les lectures de la station météo."

#: ../../src/doc/api/pywws.Reprocess.rst:2
msgid "pywws.Reprocess"
msgstr "pywws.Reprocess"

#: ../../src/pywws/Reprocess.pydocstring of pywws.Reprocess:1
msgid "Regenerate hourly and daily summary data."
msgstr "Régénérer les données sommaires horaires et quotidiennes."

#: ../../src/pywws/Reprocess.pydocstring of pywws.Reprocess:3
msgid "This script can also be run with the ``pywws-reprocess`` command. ::"
msgstr "Le script peut aussi être exécuté avec la commande ``pywws-reprocess``. ::"

#: ../../src/pywws/Reprocess.pydocstring of pywws.Reprocess:12
msgid ""
"This program recreates the calibrated, hourly, daily and monthly summary "
"data that is created by the :py:mod:`pywws.Process` module. It should be run"
" whenever you upgrade to a newer version of pywws (if the summary data "
"format has changed), change your calibration module or alter your pressure "
"offset."
msgstr ""

#: ../../src/pywws/Reprocess.pydocstring of pywws.Reprocess:18
msgid ""
"The ``-u`` (or ``--update``) option is a special case. It should be used "
"when upgrading from any pywws version earlier than 14.02.dev1143. Unlike "
"normal reprocessing, the ``-u`` option changes your raw data. You are "
"advised to backup your data before using the ``-u`` option."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.Reprocess.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.Reprocess.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`Reprocess <pywws.Reprocess.Reprocess>`\\ (data_dir, update)"
msgstr ":obj:`Reprocess <pywws.Reprocess.Reprocess>`\\ (data_dir, update)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.Reprocess.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.Reprocess.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.SetWeatherStation.rst:2
msgid "pywws.SetWeatherStation"
msgstr "pywws.SetWeatherStation"

#: ../../src/pywws/SetWeatherStation.pydocstring of pywws.SetWeatherStation:1
msgid "Set some weather station parameters."
msgstr "Régler certains paramètres de la station météo."

#: ../../src/pywws/SetWeatherStation.pydocstring of pywws.SetWeatherStation:3
msgid ""
"This script can also be run with the ``pywws-setweatherstation`` command. ::"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.SetWeatherStation.ApplicationLogger>`\\ "
"(verbose[, logfile])"
msgstr ":obj:`ApplicationLogger <pywws.SetWeatherStation.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`bcd_encode <pywws.SetWeatherStation.bcd_encode>`\\ (value)"
msgstr ":obj:`bcd_encode <pywws.SetWeatherStation.bcd_encode>`\\ (value)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.SetWeatherStation.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.SetWeatherStation.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.SetWeatherStation.datetime>`\\ (year, month, day[, "
"hour[, minute[, ...)"
msgstr ":obj:`datetime <pywws.SetWeatherStation.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.SetWeatherStation.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.SetWeatherStation.timedelta>`\\"

#: ../../src/doc/api/pywws.Tasks.rst:2
msgid "pywws.Tasks"
msgstr "pywws.Tasks"

#: ../../src/pywws/Tasks.pydocstring of pywws.Tasks:1
msgid ""
"Routines to perform common tasks such as plotting gaphs or uploading files."
msgstr "Routines pour effectuer des tâches courantes telles que tracer les gaphes ou téléverser des fichiers."

#: ../../<autosummary>:1
msgid ":obj:`Calib <pywws.Tasks.Calib>`\\ (params, stored_data)"
msgstr ":obj:`Calib <pywws.Tasks.Calib>`\\ (params, stored_data)"

#: ../../<autosummary>:1
msgid ""
":obj:`RegularTasks <pywws.Tasks.RegularTasks>`\\ (params, status, raw_data, "
"...)"
msgstr ":obj:`RegularTasks <pywws.Tasks.RegularTasks>`\\ (params, status, raw_data, ...)"

#: ../../<autosummary>:1
msgid ""
":obj:`ToService <pywws.Tasks.ToService>`\\ (params, status, calib_data, ...)"
msgstr ":obj:`ToService <pywws.Tasks.ToService>`\\ (params, status, calib_data, ...)"

#: ../../<autosummary>:1 ../../<autosummary>:1
#: ../../src/pywws/toservice.pydocstring of pywws.toservice.ToService:1
msgid "Upload weather data to weather services such as Weather Underground."
msgstr "Téléverse les données météo pour les services météorologiques tels que Weather Underground."

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.Tasks.datetime>`\\ (year, month, day[, hour[, minute[,"
" ...)"
msgstr ":obj:`datetime <pywws.Tasks.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`deque <pywws.Tasks.deque>`\\"
msgstr ":obj:`deque <pywws.Tasks.deque>`\\"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.Tasks.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.Tasks.timedelta>`\\"

#: ../../src/doc/api/pywws.Template.rst:2
msgid "pywws.Template"
msgstr "pywws.Template"

#: ../../src/pywws/Template.pydocstring of pywws.Template:1
msgid "Create text data file based on a template ::"
msgstr "Crée un fichier de données texte basé sur un gabarit ::"

#: ../../src/pywws/Template.pydocstring of pywws.Template:16
msgid ""
"This is probably the most difficult to use module in the weather station "
"software collection. It generates text files based on a \"template\" file "
"plus the raw, hourly, daily & monthly weather station data. The template "
"processing goes beyond simple substitution of values to include loops, jumps"
" forwards or backwards in the data, processing of the data and substitution "
"of missing values."
msgstr "C'est probablement le module le plus difficile à utiliser dans le logiciel de collecte de la station météo. Il génère des fichiers de texte basé sur un fichier \"modèle\"  ainsi que les données brutes, horaires, quotidiennes et mensuelles de la station météo. Le traitement de gabarits va au-delà de la simple substitution des valeurs pour inclure des boucles, des sauts vers l'avant ou vers l'arrière dans les données, le traitement des données et de substitution des valeurs manquantes."

#: ../../src/pywws/Template.pydocstring of pywws.Template:23
msgid ""
"A template file can be any sort of text file (plain text, xml, html, etc.) "
"to which \"processing instructions\" have been added. These processing "
"instructions are delimited by hash ('#') characters. They are not copied to "
"the output, but cause something else to happen: either a data value is "
"inserted or one of a limited number of other actions is carried out."
msgstr "Un fichier gabarit peut être n'importe quel type de fichier texte (texte brut, xml, html, etc) dans lequel des \"instructions de traitement\" ont été ajoutées. Ces instructions de traitement sont délimitées par le caractère dièse ('#'). Ils ne sont pas affichés, mais provoquent autre chose: soit une valeur de données est insérée ou un nombre limité d'actions sont exécutées."

#: ../../src/pywws/Template.pydocstring of pywws.Template:30
msgid ""
"Before writing your own template files, it might be useful to look at some "
"of the examples in the example_templates directory."
msgstr "Avant d'écrire vos propres fichiers gabarits, il pourrait être utile d'examiner quelques-uns des exemples dans le répertoire example_templates."

#: ../../src/pywws/Template.pydocstring of pywws.Template:36
msgid ""
"The ``[config]`` section of :ref:`weather.ini <weather_ini-config>` has a "
"``template encoding`` entry that tells pywws what text encoding your "
"template files use. The default value, ``iso-8859-1``, is suitable for most "
"western European languages, but may need changing if you use another "
"language. It can be set to any text encoding recognised by the Python "
":py:mod:`codecs` module."
msgstr ""

#: ../../src/pywws/Template.pydocstring of pywws.Template:43
msgid ""
"Make sure all your templates use the text encoding you set. The `iconv "
"<http://man7.org/linux/man-pages/man1/iconv.1.html>`_ program can be used to"
" transcode files."
msgstr ""

#: ../../src/pywws/Template.pydocstring of pywws.Template:48
msgid "Processing instructions"
msgstr "Instructions de traitement"

#: ../../src/pywws/Template.pydocstring of pywws.Template:50
msgid ""
"Note that if the closing '#' of a processing instruction is the last "
"character on a line then the following line break is not outputted. This "
"makes templates easier to edit as you can have a separate line for each "
"processing instruction and still produce output with no line breaks. If you "
"want to output a line break after a processing instruction, put a blank line"
" immediately after it."
msgstr ""

#: ../../src/pywws/Template.pydocstring of pywws.Template:58
msgid "``##``"
msgstr "``##``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:60
msgid "output a single '#' character."
msgstr "affiche un seul caractère '#'."

#: ../../src/pywws/Template.pydocstring of pywws.Template:63
msgid "``#! comment text#``"
msgstr "``#! comment text#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:65
msgid ""
"a comment, no output generated. ``comment text`` can be any text without a "
"line break."
msgstr "un commentaire, pas de sortie généré. '' ``comment text`` peut être n'importe quel texte sans saut de ligne."

#: ../../src/pywws/Template.pydocstring of pywws.Template:69
msgid "``#monthly#``"
msgstr "``#monthly#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:71
msgid ""
"switch to \"monthly\" summary data. The index is reset to the most recent "
"value."
msgstr "affiche le sommaire des données \"mensuelles\". L'indice est réinintialisé à la plus récente valeur"

#: ../../src/pywws/Template.pydocstring of pywws.Template:75
msgid "``#daily#``"
msgstr "``#daily#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:77
msgid ""
"switch to \"daily\" summary data. The index is reset to the most recent "
"value."
msgstr "affiche le sommaire des données \"quotidiennes\". L'indice est réinintialisé à la plus récente valeur"

#: ../../src/pywws/Template.pydocstring of pywws.Template:81
msgid "``#hourly#``"
msgstr "``#hourly#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:83
msgid ""
"switch to \"hourly\" summary data. The index is reset to the most recent "
"value."
msgstr "affiche le sommaire des données \"horaires\". L'indice est réinintialisé à la plus récente valeur."

#: ../../src/pywws/Template.pydocstring of pywws.Template:87
msgid "``#raw#``"
msgstr "``#raw#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:89
msgid "switch to \"raw\" data. The index is reset to the most recent value."
msgstr "affiche les données \"brutes\". L'indice est réinitialisé à la plus récente valeur."

#: ../../src/pywws/Template.pydocstring of pywws.Template:91
msgid ""
"This now selects \"calibrated\" data. The directive name remains unchanged "
"for backwards compatibility."
msgstr ""

#: ../../src/pywws/Template.pydocstring of pywws.Template:96
msgid "``#live#``"
msgstr "``#live#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:98
msgid ""
"switch to \"live\" data. If the template is processed in the ``[live]`` "
"section of ``weather.ini`` this will select the most up-to-date weather "
"data, otherwise it will have the same effect as ``#raw#``. Any ``#jump#`` "
"will go to \"raw\" data."
msgstr ""

#: ../../src/pywws/Template.pydocstring of pywws.Template:104
msgid "``#timezone name#``"
msgstr "``#timezone name#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:106
msgid ""
"convert all datetime values to time zone ``name`` before output. Permitted "
"values for name are ``utc`` or ``local``."
msgstr "converti  toute les valeurs de temps en zone de temps ``name`` avant affichage. Les valeurs permises sont ``utc`` ou ``local``."

#: ../../src/pywws/Template.pydocstring of pywws.Template:110
msgid "``#locale expr#``"
msgstr "``#locale expr#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:112
msgid ""
"switch use of 'locale' on or off, according to ``expr``. When locale is on "
"floating point numbers may use a comma as the decimal separator instead of a"
" point, depending on your localisation settings. Use ``\"True\"`` or "
"``\"False\"`` for expr."
msgstr ""

#: ../../src/pywws/Template.pydocstring of pywws.Template:118
msgid "``#roundtime expr#``"
msgstr "``#roundtime expr#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:120
msgid ""
"switch time rounding on or off, according to ``expr``. When time rounding is"
" on, 30 seconds is added to each time value used. This is useful if you are "
"only printing out hours and minutes, e.g. with a \"%H:%M\" format, and want "
"time values such as 10:23:58 to appear as \"10:24\". Use ``\"True\"`` or "
"``\"False\"`` for expr."
msgstr "met l'arrondissement du temps en fonction ou hors fonction, selon ``expr``. Lorsque l'arrondissement du temps est en fonction, 30 secondes est ajouté à chaque valeur de temps utilisée. Ceci est utile lorsque vous affichez seulement en heures et minutes, exemple avec un format \"%H:%M\", et que vous souhaitez qu'une valeur comme 10:23:58 apparaisse ainsi \"10:24\". Pour la valeur de expr, utiliser ``\"True\"`` ou ``\"False\"``."

#: ../../src/pywws/Template.pydocstring of pywws.Template:127
msgid "``#jump count#``"
msgstr "``#jump count#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:129
msgid ""
"jump ``count`` values. The data index is adjusted by ``count`` hours or "
"days. Negative values jump back in time."
msgstr "saute ``count`` valeurs. L'indice des données est ajusté par ``count`` heures ou jours. Des valeures négatives saute en arrière dans le temps."

#: ../../src/pywws/Template.pydocstring of pywws.Template:132
msgid ""
"It is a good idea to put jumps within a loop at the end, just before the "
"``#endloop#`` instruction. The loop can then terminate cleanly if it has run"
" out of data."
msgstr "Dans une boucle, c'est une bonne idée de mettre des sauts à la fin, juste avant l'instruction ``#endloop``. La boucle peut alors se terminer proprement si elle a épuisé toutes les données."

#: ../../src/pywws/Template.pydocstring of pywws.Template:137
msgid "``#goto date-time#``"
msgstr "``#goto date-time#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:139
msgid ""
"go to ``date-time``. The data index is adjusted to the record immediately "
"after ``date-time``. This can be in UTC or your local time zone, according "
"to the setting of ``timezone``, and must exactly match the ISO date format, "
"for example ``\"2010-11-01 12:00:00\"`` is noon on 1st November 2010."
msgstr "aller à ``date-time``. L'indice des données est ajusté à l'enregistrement immédiatement après ``date-time``. Ceci peut être en temps UTC ou dans votre zone de temps local, selon la configuration de ``timezone``, et doit exactement correspondre au format de date ISO, par exemple ``\"2010-11-01 12:00:00\"`` est midi le 1er Novembre 2010."

#: ../../src/pywws/Template.pydocstring of pywws.Template:145
msgid ""
"Parts of ``date-time`` can be replaced with strftime style % format "
"characters to specify the current loop index. For example, ``\"%Y-%m-01 "
"12:00:00\"`` is noon on 1st of this month."
msgstr "Des parties de ``date-time`` peuvent être remplacées par le caractère de formatage % comme dans strftime pour spécifier l'indice courant de la bouche. Par exemple, ``\"%Y-%m-01 12:00:00\"`` est midi le 1er de ce mois."

#: ../../src/pywws/Template.pydocstring of pywws.Template:150
msgid "``#loop count#``"
msgstr "``#loop count#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:152
msgid ""
"start a loop that will repeat ``count`` times. ``count`` must be one or "
"more."
msgstr "démarre une boucle qui se répétera ``count`` fois. ``count`` doit être égale à 1 ou plus."

#: ../../src/pywws/Template.pydocstring of pywws.Template:156
msgid "``#endloop#``"
msgstr "``#endloop#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:158
msgid ""
"end a loop started by ``#loop count#``. The template processing will go back"
" to the line containing the ``#loop count#`` instruction. Don't try to nest "
"loops."
msgstr "termine une boucle démarrée par ``#loop count# ``. Le traitement du gabarit reviendra à la ligne contenant l'instruction ``#loop count#``. Ne pas essayer d'imbriquer des boucles."

#: ../../src/pywws/Template.pydocstring of pywws.Template:163
msgid "``#key fmt_string no_value_string conversion#``"
msgstr "``#key fmt_string no_value_string conversion#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:165
msgid ""
"output a data value. ``key`` is the data key, e.g. ``temp_out`` for outdoor "
"temperature. ``fmt_string`` is a printf-like format string (actually "
"Python's % operator) except for datetime values, when it is input to "
"datetime's ``strftime()`` method. ``no_value_string`` is output instead of "
"``fmt_string`` when the data value is absent, e.g. if the station lost "
"contact with the outside sensor. ``conversion`` is a Python expression to "
"convert the data, e.g. to convert wind speed from m/s to mph you could use "
"``\"x * 3.6 / 1.609344\"``, or the more convenient provided function "
"``\"wind_mph(x)\"``. See the :py:mod:`pywws.conversions` module for details "
"of the available functions."
msgstr ""

#: ../../src/pywws/Template.pydocstring of pywws.Template:177
msgid ""
"All these values need double quotes \" if they contain spaces or other "
"potentially difficult characters. All except ``key`` are optional, but note "
"that if you want to specify a conversion, you also need to specify "
"``fmt_string`` and ``no_value_string``."
msgstr "Toutes ces valeurs doivent entre guillemets \"si elles contiennent des espaces ou d'autres caractères potentiellement difficiles. Tout sauf ``key`` sont facultatifs, mais notez que si vous voulez spécifier une conversion, vous devez également spécifier ``fmt_string`` et ``no_value_string``."

#: ../../src/pywws/Template.pydocstring of pywws.Template:183
msgid "``#calc expression fmt_string no_value_string conversion#``"
msgstr "``#calc expression fmt_string no_value_string conversion#``"

#: ../../src/pywws/Template.pydocstring of pywws.Template:185
msgid ""
"output a value computed from one or more data items. ``expression`` is any "
"valid Python expression, e.g. ``\"dew_point(data['temp_out'], "
"data['hum_out'])\"`` to compute the outdoor dew point. ``fmt_string``, "
"``no_value_string`` and ``conversion`` are as described above. Note that it "
"is probably more efficient to incorporate any conversion into expression."
msgstr "affiche une valeur calculée à partir d'un ou plusieurs éléments de données. ``expression`` représente toute expression Python valide, par exemple, ``\"Dew_point(data['temp_out'], data['hum_out'])\"`` pour calculer le point de rosée. ``fmt_string``, ``no_value_string`` et ``conversion`` sont tel que décrit ci-dessus. Notez qu'il est probablement plus efficace d'intégrer toute conversion dans l'expression."

#: ../../src/pywws/Template.pydocstring of pywws.Template:192
msgid ""
"In addition to the functions in the :py:mod:`pywws.conversions` module there"
" are three more useful functions: ``rain_hour(data)`` returns the amount of "
"rain in the last hour, ``rain_day(data)`` returns the amount of rain since "
"midnight (local time) and ``hour_diff(data, key)`` returns the change in "
"data item ``key`` over the last hour."
msgstr ""

#: ../../src/pywws/Template.pydocstring of pywws.Template:199
msgid "Example"
msgstr "Exemple"

#: ../../src/pywws/Template.pydocstring of pywws.Template:201
msgid ""
"Here is an example snippet showing basic and advanced use of the template "
"features. It is part of the 6hrs.txt example template file, which generates "
"an HTML table of 7 hourly readings (which should span 6 hours). ::"
msgstr "Voici un extrait qui montre un exemple de l'utilisation de base et avancé des caractéristiques du gabarit. Il fait partie du fichier modèle 6hrs.txt, ce qui génère un tableau HTML de 7 relevés horaires (qui devrait s'étendre sur 6 heures). ::"

#: ../../src/pywws/Template.pydocstring of pywws.Template:223
msgid ""
"The first three lines of this snippet do the following: select hourly data, "
"jump back 6 hours, start a loop with a count of 7. A jump forward of one "
"hour appears just before the end of the repeated segment. As this last jump "
"(of one hour) happens each time round the loop, a sequence of 7 data "
"readings will be output. The last line marks the end of the loop — "
"everything between the ``#loop 7#`` and ``#endloop#`` lines is output 7 "
"times."
msgstr "Les trois premières lignes de cet extrait, exécutent ce qui suit: sélectionne les données horaires, revient en arrière de 6 heures, commence une boucle avec un nombre de 7. Un saut d'une heure apparaît juste avant la fin du segment répété. Comme ce dernier saut (d'une heure) se produit à chaque tour de la boucle, une séquence de 7 lectures de données sera affichée. La dernière ligne marque la fin de la boucle - tout ce qui est entre les lignes ``#loop 7#`` et ``#endloop#`` est affiché 7 fois."

#: ../../src/pywws/Template.pydocstring of pywws.Template:231
msgid ""
"The ``#temp_out ...#``, ``#hum_out ...#``, ``#rain ...#`` and "
"``#rel_pressure ...#`` instructions show basic data output. They each use a "
"``fmt_string`` to format the data appropriately. The ``#wind_ave ...#`` and "
"``#wind_gust ...#`` instructions show how to use a conversion expression to "
"convert m/s to mph."
msgstr "Les instructions ``#temp_out ...#``, ``#hum_out ...#``, ``#rain ... #`` et ``#rel_pressure ...#`` affichent les données de base. Elles utilisent chacune un format de donnée ``fmt_string`` pour formater les données de façon appropriée. Les instructions``#wind_ave ...#`` et ``#wind_gust ...#`` montrent comment utiliser une expression de conversion pour convertir m/s en mph."

#: ../../src/pywws/Template.pydocstring of pywws.Template:237
msgid ""
"The ``#wind_dir ...#`` and ``#pressure_trend ...#`` instructions show use of"
" the built-in functions ``winddir_text`` and ``pressure_trend_text`` to "
"convert numerical values into text."
msgstr "Les instructions ``#wind_dir ... #`` et ``#pressure_trend ... #`` affichent l'utilisation des fonctions ``winddir_text`` et ``pressure_trend_text`` pour convertir des valeurs numériques en texte ."

#: ../../src/pywws/Template.pydocstring of pywws.Template:241
msgid ""
"Finally we get to datetime values. The ``#idx \"%H%M\"#`` instruction simply"
" outputs the time (in HHMM format) of the data's index. The ``#idx "
"\"%Y/%m/%d\" \"\" \"[None, x][x.hour == 0 or loop_count == 7]\"#`` "
"instruction is a bit more complicated. It outputs the date, but only on the "
"first line or if the date has changed. It does this by indexing the array "
"``[None, x]`` with a boolean expression that is true when ``loop_count`` is "
"7 (i.e. on the first pass through the loop) or ``x.hour`` is zero (i.e. this"
" is the first hour of the day)."
msgstr "Enfin nous arrivons aux valeurs de datetime. L'instruction ``#idx \"%H%M\"#`` affiche simplement l'heure (au format HHMM) de l'indice de donnée. L'instruction ``#idx \"%Y/%m/%d\" \"\" \"[None, x] [x.hour == 0 or loop_count == 7]\"#`` est un peu plus compliquée. Elle affiche la date, mais seulement sur la première ligne ou si la date a changée. Elle le fait en indexant le tableau ``[None, x]`` avec une expression booléenne vraie quand ``loop_count`` est égal à 7 (c'est à dire sur le premier passage dans la boucle) ou ``x.hour`` est zéro (c'est la première heure de la journée)."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.Template.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.Template.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`Zambretti <pywws.Template.Zambretti>`\\ (params, hourly_data)"
msgstr ":obj:`Zambretti <pywws.Template.Zambretti>`\\ (params, hourly_data)"

#: ../../<autosummary>:1
msgid ""
":obj:`ZambrettiCode <pywws.Template.ZambrettiCode>`\\ (params, hourly_data)"
msgstr ":obj:`ZambrettiCode <pywws.Template.ZambrettiCode>`\\ (params, hourly_data)"

#: ../../<autosummary>:1
msgid ":obj:`apparent_temp <pywws.Template.apparent_temp>`\\ (temp, rh, wind)"
msgstr ":obj:`apparent_temp <pywws.Template.apparent_temp>`\\ (temp, hr, vent)"

#: ../../<autosummary>:1
msgid ":obj:`cadhumidex <pywws.Template.cadhumidex>`\\ (temp, humidity)"
msgstr ":obj:`cadhumidex <pywws.Template.cadhumidex>`\\ (temp, humidité)"

#: ../../<autosummary>:1
msgid ":obj:`dew_point <pywws.Template.dew_point>`\\ (temp, hum)"
msgstr ":obj:`dew_point <pywws.Template.dew_point>`\\ (temp, hum)"

#: ../../<autosummary>:1
msgid ":obj:`illuminance_wm2 <pywws.Template.illuminance_wm2>`\\ (lux)"
msgstr ":obj:`illuminance_wm2 <pywws.Template.illuminance_wm2>`\\ (lux)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.Template.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.Template.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`pressure_inhg <pywws.Template.pressure_inhg>`\\ (hPa)"
msgstr ":obj:`pressure_inhg <pywws.Template.pressure_inhg>`\\ (hPa)"

#: ../../<autosummary>:1
msgid ""
":obj:`pressure_trend_text <pywws.Template.pressure_trend_text>`\\ (trend)"
msgstr ":obj:`pressure_trend_text <pywws.Template.pressure_trend_text>`\\ (trend)"

#: ../../<autosummary>:1
msgid ":obj:`rain_inch <pywws.Template.rain_inch>`\\ (mm)"
msgstr ":obj:`rain_inch <pywws.Template.rain_inch>`\\ (mm)"

#: ../../<autosummary>:1
msgid ":obj:`temp_f <pywws.Template.temp_f>`\\ (c)"
msgstr ":obj:`temp_f <pywws.Template.temp_f>`\\ (c)"

#: ../../<autosummary>:1
msgid ""
":obj:`usaheatindex <pywws.Template.usaheatindex>`\\ (temp, humidity, dew)"
msgstr ":obj:`usaheatindex <pywws.Template.usaheatindex>`\\ (temp, humidité, point de rosée)"

#: ../../<autosummary>:1
msgid ":obj:`wind_bft <pywws.Template.wind_bft>`\\ (ms)"
msgstr ":obj:`wind_bft <pywws.Template.wind_bft>`\\ (ms)"

#: ../../<autosummary>:1
msgid ":obj:`wind_chill <pywws.Template.wind_chill>`\\ (temp, wind)"
msgstr ":obj:`wind_chill <pywws.Template.wind_chill>`\\ (temp, vent)"

#: ../../<autosummary>:1
msgid ":obj:`wind_kmph <pywws.Template.wind_kmph>`\\ (ms)"
msgstr ":obj:`wind_kmph <pywws.Template.wind_kmph>`\\ (ms)"

#: ../../<autosummary>:1
msgid ":obj:`wind_kn <pywws.Template.wind_kn>`\\ (ms)"
msgstr ":obj:`wind_kn <pywws.Template.wind_kn>`\\ (ms)"

#: ../../<autosummary>:1
msgid ":obj:`wind_mph <pywws.Template.wind_mph>`\\ (ms)"
msgstr ":obj:`wind_mph <pywws.Template.wind_mph>`\\ (ms)"

#: ../../<autosummary>:1
msgid ""
":obj:`winddir_average <pywws.Template.winddir_average>`\\ (data, threshold, "
"min_count)"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`winddir_degrees <pywws.Template.winddir_degrees>`\\ (pts)"
msgstr ":obj:`winddir_degrees <pywws.Template.winddir_degrees>`\\ (pts)"

#: ../../<autosummary>:1
msgid ":obj:`winddir_text <pywws.Template.winddir_text>`\\ (pts)"
msgstr ":obj:`winddir_text <pywws.Template.winddir_text>`\\ (pts)"

#: ../../<autosummary>:1
msgid ""
":obj:`Template <pywws.Template.Template>`\\ (params, status, calib_data, "
"...[, ...])"
msgstr ":obj:`Template <pywws.Template.Template>`\\ (params, status, calib_data, ...[, ...])"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.Template.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.Template.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.Template.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.Template.timedelta>`\\"

#: ../../src/doc/api/pywws.TestWeatherStation.rst:2
msgid "pywws.TestWeatherStation"
msgstr "pywws.TestWeatherStation"

#: ../../src/pywws/TestWeatherStation.pydocstring of
#: pywws.TestWeatherStation:1
msgid "Test connection to weather station."
msgstr "Teste la connexion à la station météo."

#: ../../src/pywws/TestWeatherStation.pydocstring of
#: pywws.TestWeatherStation:3
msgid ""
"This script can also be run with the ``pywws-testweatherstation`` command. "
"::"
msgstr "Le script peut aussi être exécuté avec la commande ``pywws-testweatherstation``. ::"

#: ../../src/pywws/TestWeatherStation.pydocstring of
#: pywws.TestWeatherStation:18
msgid ""
"This is a simple utility to test communication with the weather station. If "
"this doesn't work, then there's a problem that needs to be sorted out before"
" trying any of the other programs. Likely problems include not properly "
"installing the USB libraries, or a permissions problem. The most unlikely "
"problem is that you forgot to connect the weather station to your computer!"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.TestWeatherStation.ApplicationLogger>`\\ "
"(verbose[, logfile])"
msgstr ":obj:`ApplicationLogger <pywws.TestWeatherStation.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.TestWeatherStation.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.TestWeatherStation.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`raw_dump <pywws.TestWeatherStation.raw_dump>`\\ (pos, data)"
msgstr ":obj:`raw_dump <pywws.TestWeatherStation.raw_dump>`\\ (pos, data)"

#: ../../src/doc/api/pywws.TimeZone.rst:2
msgid "pywws.TimeZone"
msgstr "pywws.TimeZone"

#: ../../src/pywws/TimeZone.pydocstring of pywws.TimeZone:1
msgid ""
"Provide a couple of :py:class:`datetime.tzinfo` compatible objects "
"representing local time and UTC."
msgstr "Fournir un couple d'objets :py:class:`datetime.tzinfo` compatibles représentant l'heure locale et l'heure UTC. "

#: ../../src/pywws/TimeZone.pydocstring of pywws.TimeZone:7
msgid ""
"This module provides two :py:class:`datetime.tzinfo` compatible objects "
"representing UTC and local time zones. These are used to convert timestamps "
"to and from UTC and local time. The weather station software stores data "
"with UTC timestamps, to avoid problems with daylight savings time, but the "
"template and plot programs output data with local times."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.TimeZone.main>`\\ ()"
msgstr ":obj:`main <pywws.TimeZone.main>`\\ ()"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.TimeZone.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.TimeZone.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../src/doc/api/pywws.ToTwitter.rst:2
msgid "pywws.ToTwitter"
msgstr "pywws.ToTwitter"

#: ../../src/pywws/ToTwitter.pydocstring of pywws.ToTwitter:1
msgid "Post a message to Twitter ::"
msgstr "Poster un message sur Twitter ::"

#: ../../src/pywws/ToTwitter.pydocstring of pywws.ToTwitter:12
msgid ""
"This module posts a brief message to `Twitter <https://twitter.com/>`_. "
"Before posting to Twitter you need to set up an account and then authorise "
"pywws by running the :py:mod:`TwitterAuth` program. See "
":doc:`../guides/twitter` for detailed instructions."
msgstr "Ce module poste un bref message sur `Twitter <https://twitter.com/>` _. Avant de poster sur Twitter, vous devez créer un compte et autoriser pywws en exécutant le programme :py: mod: `TwitterAuth`. Voir :doc: `../Guides/twitter` obtenir les instructions détaillées."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.ToTwitter.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.ToTwitter.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.ToTwitter.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.ToTwitter.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ""
":obj:`PythonTwitterHandler <pywws.ToTwitter.PythonTwitterHandler>`\\ (key, "
"secret, latitude, ...)"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`ToTwitter <pywws.ToTwitter.ToTwitter>`\\ (params)"
msgstr ":obj:`ToTwitter <pywws.ToTwitter.ToTwitter>`\\ (params)"

#: ../../<autosummary>:1
msgid ""
":obj:`TweepyHandler <pywws.ToTwitter.TweepyHandler>`\\ (key, secret, "
"latitude, longitude)"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`pct <pywws.ToTwitter.pct>`\\"
msgstr ":obj:`pct <pywws.ToTwitter.pct>`\\"

#: ../../<autosummary>:1
msgid "alias of :class:`Twitter`"
msgstr ""

#: ../../src/doc/api/pywws.TwitterAuth.rst:2
msgid "pywws.TwitterAuth"
msgstr "pywws.TwitterAuth"

#: ../../src/pywws/TwitterAuth.pydocstring of pywws.TwitterAuth:1
msgid "Authorise pywws to post to your Twitter account ::"
msgstr "Autorise pywws à publier sur votre compte Twitter::"

#: ../../src/pywws/TwitterAuth.pydocstring of pywws.TwitterAuth:11
msgid ""
"This program authorises :py:mod:`pywws.ToTwitter` to post to a Twitter "
"account. You need to create an account before running :py:mod:`TwitterAuth`."
" It opens a web browser window (or gives you a URL to copy to your web "
"browser) where you log in to your Twitter account. If the login is "
"successful the browser will display a 7 digit number which you then copy to "
":py:mod:`TwitterAuth`."
msgstr "Ce programme autorise :py:mod:`pywws.ToTwitter` à poster sur un compte Twitter. Vous devez créer un compte avant de lancer :py:mod:`TwitterAuth`. Il ouvre une fenêtre de navigateur Web (ou vous donne une URL à copier dans votre navigateur) où vous vous connectez à votre compte Twitter. Si la connexion est réussie, le navigateur affichera un nombre à 7 chiffres, que vous devrez copier dans :py:mod:`TwitterAuth`."

#: ../../src/pywws/TwitterAuth.pydocstring of pywws.TwitterAuth:18
msgid ""
"See :doc:`../guides/twitter` for more detail on using Twitter with pywws."
msgstr "Voir :doc:`../guides/twitter` pour plus de détails sur l'utilisation de Twitter avec pywws."

#: ../../<autosummary>:1
msgid ":obj:`TwitterAuth <pywws.TwitterAuth.TwitterAuth>`\\ (params)"
msgstr ":obj:`TwitterAuth <pywws.TwitterAuth.TwitterAuth>`\\ (params)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.TwitterAuth.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.TwitterAuth.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`Twitter <pywws.TwitterAuth.Twitter>`\\"
msgstr ":obj:`Twitter <pywws.TwitterAuth.Twitter>`\\"

#: ../../src/doc/api/pywws.USBQualityTest.rst:2
msgid "pywws.USBQualityTest"
msgstr "pywws.USBQualityTest"

#: ../../src/pywws/USBQualityTest.pydocstring of pywws.USBQualityTest:1
msgid "Test quality of USB connection to weather station"
msgstr "Teste la qualité de la connexion USB avec votre station météo"

#: ../../src/pywws/USBQualityTest.pydocstring of pywws.USBQualityTest:13
msgid ""
"The USB link to my weather station is not 100% reliable. The data read from "
"the station by the computer is occasionally corrupted, perhaps by "
"interference. I've been trying to solve this by putting ferrite beads around"
" the USB cable and relocating possible interference sources such as external"
" hard drives. All without any success so far."
msgstr "La liaison USB à ma station n'est pas fiable à 100%. Les données lues à partir de la station par l'ordinateur sont occasionnellement corrompues, peut-être par une interférence. J'ai essayé de résoudre ce problème en mettant une perle de ferrite autour du câble USB et le déplaçant des sources d'interférences possibles, tels que les disques durs externes. Le tout sans succès jusqu'à présent."

#: ../../src/pywws/USBQualityTest.pydocstring of pywws.USBQualityTest:20
msgid ""
"This program tests the USB connection for errors by continuously reading the"
" entire weather station memory (except for those parts that may be changing)"
" looking for errors. Each 32-byte block is read twice, and if the two "
"readings differ a warning message is displayed. Also displayed are the "
"number of blocks read, and the number of errors found."
msgstr "Ce programme teste la connexion USB en lisant de manière continue toute la mémoire de la station météo (sauf les parties qui peuvent être changeantes) à la recherche d'erreurs. Chaque bloc de 32 octets est lu deux fois, et si les deux lectures diffèrent, un message d'avertissement s'affiche. Sont également affichés le nombre de blocs lus, et le nombre d'erreurs rencontrées."

#: ../../src/pywws/USBQualityTest.pydocstring of pywws.USBQualityTest:27
msgid ""
"I typically get one or two errors per hour, so the test needs to be run for "
"several hours to produce a useful measurement. Note that other software that"
" accesses the weather station (such as :py:mod:`pywws.Hourly` or "
":py:mod:`pywws.LiveLog`) must not be run while the test is in progress."
msgstr ""

#: ../../src/pywws/USBQualityTest.pydocstring of pywws.USBQualityTest:33
msgid ""
"If you run this test and get no errors at all, please let me know. There is "
"something good about your setup and I'd love to know what it is!"
msgstr "Si vous exécutez ce test et obtenez absolument aucune erreur, s'il vous plaît faites le moi savoir. Il y a quelque chose de spécial dans votre configuration et j'aimerais bien savoir ce que c'est"

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.USBQualityTest.ApplicationLogger>`\\ "
"(verbose[, logfile])"
msgstr ":obj:`ApplicationLogger <pywws.USBQualityTest.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.USBQualityTest.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.USBQualityTest.main>`\\ ([argv])"

#: ../../src/doc/api/pywws.Upload.rst:2
msgid "pywws.Upload"
msgstr "pywws.Upload"

#: ../../src/pywws/Upload.pydocstring of pywws.Upload:1
msgid ""
"Upload files to a web server by ftp or copy them to a local directory ::"
msgstr "Téléverse des fichiers sur un serveur web via ftp ou les copies dans un répertoire local ::"

#: ../../src/pywws/Upload.pydocstring of pywws.Upload:11
msgid ""
"Login and ftp site details are read from the weather.ini file in data_dir."
msgstr "Le nom d'usager et les détails du site ftp sont lues à partir du fichier weather.ini dans data_dir."

#: ../../src/pywws/Upload.pydocstring of pywws.Upload:18
msgid ""
"This module uploads files to (typically) a website *via* ftp/sftp or copies "
"files to a local directory (e.g. if you are running pywws on the your web "
"server). Details of the upload destination are stored in the file "
"``weather.ini`` in your data directory. The only way to set these details is"
" to edit the file. Run :py:mod:`pywws.Upload` once to set the default "
"values, which you can then change. Here is what you're likely to find when "
"you edit ``weather.ini``::"
msgstr "Ce module téléverse des fichiers sur (en général) un site Web *via* ftp/sftp ou copie les fichiers dans un répertoire local (par exemple, si vous exécutez pywws sur votre propre serveur web). Les détails de destination de téléversement sont stockés dans le fichier ``weather.ini`` dans votre répertoire de données. La seule façon de régler ces détails est d'éditer le fichier. Exécuter :py:mod:`pywws.Upload` une fois pour définir les valeurs par défaut, que vous pouvez ensuite modifier. Voici ce que vous êtes susceptible de trouver lorsque vous éditez ``weather.ini``::"

#: ../../src/pywws/Upload.pydocstring of pywws.Upload:34
msgid ""
"These are, I hope, fairly obvious. The ``local site`` option lets you switch"
" from uploading to a remote site to copying to a local site. If you set "
"``local site = True`` then you can delete the ``secure``, ``site``, ``user``"
" and ``password`` lines."
msgstr "Ce sont, je l'espère, des options assez évidentes. ``local site`` vous permet de passer de téléversement sur un site distant, à la copie vers un site local. Si vous réglez ``local site = True``, vous pouvez supprimer les  lignes``secure``, ``site``, ``user`` et ``password``."

#: ../../src/pywws/Upload.pydocstring of pywws.Upload:39
msgid ""
"``directory`` is the name of a directory in which all the uploaded files "
"will be put. This will depend on the structure of your web site and the sort"
" of host you use. Your hosting provider should be able to tell you what "
"``site`` and ``user`` details to use. You should have already chosen a "
"``password``."
msgstr "``directory`` est le nom d'un répertoire dans lequel tous les fichiers téléversés seront déposés. Ce qui dépendra de la structure de votre site et du type d'hôte que vous utilisez. Votre fournisseur d'hébergement doit être en mesure de vous dire ce que vous devez utiliser pour ``site`` et ``user``. Vous devriez déjà avoir choisi un ``password``."

#: ../../src/pywws/Upload.pydocstring of pywws.Upload:45
msgid ""
"The ``secure`` option lets you switch from normal ftp to sftp (ftp over "
"ssh). Some hosting providers offer this as a more secure upload mechanism, "
"so you should probably use it if available."
msgstr "L'option ``secure`` vous permet de passer de ftp normal à sftp (ftp sur ssh). Certains fournisseurs d'hébergement l'offre comme mécanisme de chargement plus sûr, alors vous devriez probablement l'utiliser lorsque disponible."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.Upload.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.Upload.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.Upload.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.Upload.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`Upload <pywws.Upload.Upload>`\\ (params)"
msgstr ":obj:`Upload <pywws.Upload.Upload>`\\ (params)"

#: ../../src/doc/api/pywws.WeatherStation.rst:2
msgid "pywws.WeatherStation"
msgstr "pywws.WeatherStation"

#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:1
msgid "Get data from WH1080/WH3080 compatible weather stations."
msgstr "Obtient les données des stations météorologiques WH1080/WH3080 et compatibles."

#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:3
msgid ""
"Derived from wwsr.c by Michael Pendec (michael.pendec@gmail.com), wwsrdump.c"
" by Svend Skafte (svend@skafte.net), modified by Dave Wells, and other "
"sources."
msgstr "Dérivé de wwsr.c par Michael Pendec (michael.pendec@gmail.com), wwsrdump.c par Svend Skafte (svend@skafte.net), modifié par Dave Wells, et d'autres sources."

#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:10
msgid ""
"This is the module that actually talks to the weather station base unit. I "
"don't have much understanding of USB, so copied a lot from Michael Pendec's "
"C program wwsr."
msgstr "C'est le module qui parle à l'unité de base de la station météo. Je n'ai pas beaucoup de compréhension de l'USB, donc j'ai copié beaucoup du programme C wwsr de Michael Pendec."

#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:14
msgid ""
"The weather station memory has two parts: a \"fixed block\" of 256 bytes and"
" a circular buffer of 65280 bytes. As each weather reading takes 16 bytes "
"the station can store 4080 readings, or 14 days of 5-minute interval "
"readings. (The 3080 type stations store 20 bytes per reading, so store a "
"maximum of 3264.) As data is read in 32-byte chunks, but each weather "
"reading is 16 or 20 bytes, a small cache is used to reduce USB traffic. The "
"caching behaviour can be over-ridden with the ``unbuffered`` parameter to "
"``get_data`` and ``get_raw_data``."
msgstr "La mémoire de la station météorologique comporte deux parties: un \"bloc fixe\" de 256 octets et une mémoire tampon circulaire de 65280 octets. Comme chaque lecture météo prend 16 octets, la station peut stocker 4080 lectures, ou 14 jours de lectures intervalle de 5 minutes. (Les stations de type 3080 stockent 20 octets par la lecture, pour un maximum de 3264 lectures) Comme les données sont lues en bloc de 32 octets, mais chaque lecture météorologique est de 16 ou 20 octets, un petit cache est utilisé pour réduire le trafic USB. Le comportement de mise en cache mémoire peut être contourné avec le paramètre ``unbuffered`` de ``get_data`` et ``get_raw_data``."

#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:23
msgid ""
"Decoding the data is controlled by the static dictionaries "
"``_reading_format``, ``lo_fix_format`` and ``fixed_format``. The keys are "
"names of data items and the values can be an ``(offset, type, multiplier)`` "
"tuple or another dictionary. So, for example, the _reading_format dictionary"
" entry ``'rain' : (13, 'us', 0.3)`` means that the rain value is an unsigned"
" short (two bytes), 13 bytes from the start of the block, and should be "
"multiplied by 0.3 to get a useful value."
msgstr ""

#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:32
msgid ""
"The use of nested dictionaries in the ``fixed_format`` dictionary allows "
"useful subsets of data to be decoded. For example, to decode the entire "
"block ``get_fixed_block`` is called with no parameters::"
msgstr "L'utilisation de dictionnaires imbriqués dans le dictionnaire ``fixed_format`` permet de décoder des sous-ensembles de données utiles . Par exemple, pour décoder le bloc entier ``get_fixed_block`` celui-ci est appelée sans paramètres::"

#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:39
msgid ""
"To get the stored minimum external temperature, ``get_fixed_block`` is "
"called with a sequence of keys::"
msgstr "Pour obtenir la température extérieure minimale stockées, ``get_fixed_block`` est appelée avec une séquence de clés::"

#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:45
msgid ""
"Often there is no requirement to read and decode the entire fixed block, as "
"its first 64 bytes contain the most useful data: the interval between stored"
" readings, the buffer address where the current reading is stored, and the "
"current date & time. The ``get_lo_fix_block`` method provides easy access to"
" these."
msgstr "Souvent, il n'est pas nécessaire de lire et décoder l'ensemble du bloc fixe, comme ses 64 premiers octets contiennent les données les plus utiles: l'intervalle entre les lectures enregistrées, l'adresse du tampon où la lecture en cours est mémorisée, ainsi que la date et l'heure courante. La méthode ``get_lo_fix_block`` offre un accès facile à ces données."

#: ../../src/pywws/WeatherStation.pydocstring of pywws.WeatherStation:51
msgid ""
"For more examples of using the WeatherStation module, see the "
"TestWeatherStation program."
msgstr "Pour d'autres exemples de l'utilisation du module WeatherStation, voir le programme TestWeatherStation."

#: ../../<autosummary>:1
msgid ":obj:`decode_status <pywws.WeatherStation.decode_status>`\\ (status)"
msgstr ":obj:`decode_status <pywws.WeatherStation.decode_status>`\\ (status)"

#: ../../<autosummary>:1
msgid ":obj:`CUSBDrive <pywws.WeatherStation.CUSBDrive>`\\ ()"
msgstr ":obj:`CUSBDrive <pywws.WeatherStation.CUSBDrive>`\\ ()"

#: ../../<autosummary>:1 ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive:1
msgid "Low level interface to weather station via USB."
msgstr "Interface de bas niveau de la station météo via USB."

#: ../../<autosummary>:1
msgid ""
":obj:`DriftingClock <pywws.WeatherStation.DriftingClock>`\\ (logger, name, "
"status, period, ...)"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`USBDevice <pywws.WeatherStation.USBDevice>`\\ (idVendor, idProduct)"
msgstr ":obj:`USBDevice <pywws.WeatherStation.USBDevice>`\\ (idVendor, idProduct)"

#: ../../<autosummary>:1 ../../<autosummary>:1
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice:1
msgid "Low level USB device access via python-libusb1 library."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.WeatherStation.datetime>`\\ (year, month, day[, hour[,"
" minute[, ...)"
msgstr ":obj:`datetime <pywws.WeatherStation.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ""
":obj:`weather_station <pywws.WeatherStation.weather_station>`\\ ([ws_type, "
"status, avoid])"
msgstr ":obj:`weather_station <pywws.WeatherStation.weather_station>`\\ ([ws_type, status, avoid])"

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive:3
msgid ""
"Loosely modeled on a C++ class obtained from "
"http://site.ambientweatherstore.com/easyweather/ws_1080_2080_protocol.zip. I"
" don't know the provenance of this, but it looks as if it may have come from"
" the manufacturer."
msgstr "Vaguement calqué sur une classe C + + obtenue à partir http://site.ambientweatherstore.com/easyweather/ws_1080_2080_protocol.zip. Je n'en sais pas la provenance, mais il semble que cela pourrait provenir du fabricant."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive.read_block:1
msgid "Read 32 bytes from the weather station."
msgstr "Lit 32 octets à partir de la station météo."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive.read_block:3
msgid "If the read fails for any reason, :obj:`None` is returned."
msgstr "Si la lecture échoue pour une raison quelconque, :obj:`None` est retourné."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive.read_block:5
msgid "address to read from."
msgstr ""

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive.read_block:9
msgid "the data from the weather station."
msgstr ""

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive.write_byte:1
msgid "Write a single byte to the weather station."
msgstr "Écrire un seul octet à la station météo."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive.write_byte:3
msgid "address to write to."
msgstr ""

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.CUSBDrive.write_byte:7
msgid "the value to write."
msgstr ""

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station:3
msgid "Connect to weather station and prepare to read data."
msgstr "Connecte à la station météo et prépare à lire les données."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.inc_ptr:1
msgid "Get next circular buffer data pointer."
msgstr "Retourne le pointeur de données suivant du tampon circulaire ."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.dec_ptr:1
msgid "Get previous circular buffer data pointer."
msgstr "Obtient le pointeur de donnée du tampon circulaire précédent."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.get_raw_data:1
msgid "Get raw data from circular buffer."
msgstr "Obtient les données brutes à partir d'un tampon circulaire."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.get_raw_data:3
#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.get_data:3
msgid ""
"If unbuffered is false then a cached value that was obtained earlier may be "
"returned."
msgstr "Si 'unbuffered' est faux, une valeur mise en cache, obtenu précédemment, peut être retourné."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.get_data:1
msgid "Get decoded data from circular buffer."
msgstr "Obtenir les données décodées à partir du tampon circulaire."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.current_pos:1
msgid "Get circular buffer location where current data is being written."
msgstr "Obtenir l'emplacement du tampon circulaire lorsque les données actuelles sont en cours d'écriture."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.get_raw_fixed_block:1
msgid "Get the raw \"fixed block\" of settings and min/max data."
msgstr "Obtenir le \"bloc fixe\" brut des paramètres et des données MIN/MAX."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.get_fixed_block:1
msgid "Get the decoded \"fixed block\" of settings and min/max data."
msgstr "Obtient le \"bloc fixe\" décodé des paramètres et des données MIN/MAX."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.get_fixed_block:3
msgid "A subset of the entire block can be selected by keys."
msgstr "Un sous-ensemble du bloc complet pouvant être sélectionné par clés."

#: ../../src/pywws/WeatherStation.pydocstring of
#: pywws.WeatherStation.weather_station.write_data:1
msgid ""
"Write a set of single bytes to the weather station. Data must be an array of"
" (ptr, value) pairs."
msgstr "Écrit un ensemble d'octets unique vers la station météo. Les données doivent être un tableau de (ptr, valeur) paires."

#: ../../src/doc/api/pywws.WindRose.rst:2
msgid "pywws.WindRose"
msgstr "pywws.WindRose"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:1
msgid "Plot a \"wind rose\""
msgstr "Tracer une  \"rose des vents\"."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:18
msgid ""
"This routine plots one or more \"wind roses\" (see `Wikipedia "
"<http://en.wikipedia.org/wiki/Wind_rose>`_ for a description). Like "
":py:mod:`pywws.Plot` almost everything is controlled by an XML \"recipe\" / "
"template file."
msgstr "Cette routine trace une ou plusieurs \"rose des vents\" (voir `Wikipedia <http://en.wikipedia.org/wiki/Wind_rose>` _ pour une description). Comme :py:mod:`pywws.Plot` presque tout est contrôlé par un fichier \"recette\"/gabarit XML."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:23
msgid ""
"Before writing your own template files, it might be useful to look at some "
"of the examples in the example_graph_templates directory. If (like I was) "
"you are unfamiliar with XML, I suggest reading the `W3 Schools XML tutorial "
"<http://www.w3schools.com/xml/>`_."
msgstr "Avant d'écrire vos propres fichiers gabarits, il pourrait être utile de jeter un coup d'oeil sur quelques exemples dans le répertoire example_graph_templates. Si (comme moi) vous n'êtes pas familier avec le langage XML, je vous suggère de lire `Le point sur le XML < http://www.siteduzero.com/tutoriel-3-33440-le-point-sur-xml.html/>` _."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:31
msgid ""
"Here is the simplest useful wind rose template. It plots wind over the last "
"24 hours. ::"
msgstr "Voici le plus simple  gabarit de rose des vents utile. Il trace le vent au cours des dernières 24 heures. ::"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:41
msgid ""
"In this example, the root element graph has one windrose element which "
"contains nothing more than a ycalc element."
msgstr "Dans cet exemple, l'élément racine du graphe est un élément de rose des vents qui ne contient rien de plus qu'un élément ycalc."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:47
msgid "windrose_"
msgstr "windrose_"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:50
msgid "threshold_"
msgstr "threshold_"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:53
msgid "points_"
msgstr "points_"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:62
msgid "`lmargin, rmargin, tmargin, bmargin`_"
msgstr "`lmargin, rmargin, tmargin, bmargin`_"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:74
msgid ""
"This element sets the date & time of the wind roses. It is used in the "
"constructor of a Python datetime object. For example, to start at noon "
"(local time) on Christmas day 2008: ``<start>year=2008, month=12, day=25, "
"hour=12</start>``. The default value is (stop - duration)."
msgstr "Cet élément règle la date et l'heure des roses des vents. Il est utilisé dans la construction d'un objet datetime Python. Par exemple, pour commencer, à midi (heure locale) le jour de Noël 2008: ``<start>year=2008, month=12, day=25, hour=12</ start>``. La valeur par défaut est (stop - durée)."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:82
msgid ""
"This element sets the date & time of the end of the wind roses. It is used "
"in the constructor of a Python datetime object. For example, to end at 10 am"
" (local time) on new year's day 2009: ``<stop>year=2009, month=1, day=1, "
"hour=10</stop>``. The default value is (start + duration), unless start is "
"not defined in which case the timestamp of the latest weather station hourly"
" reading is used."
msgstr "Cet élément règle la date et l'heure de la fin des roses des vents. Il est utilisé dans la construction d'un objet datetime Python. Par exemple, pour se terminer à 10 h (heure locale) le jour de l'an 2009: ``<stop>year=2009, month=1, day=1, hour=10</stop>``. La valeur par défaut est (départ + durée), à ​​moins que départ ne soit pas défini. Dans ce cas, l'horodatage de la dernière lecture horaire de la station est utilisée."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:92
msgid ""
"This element sets the duration of wind roses, unless both start and stop are"
" defined. It is used in the constructor of a Python timedelta object. For "
"example, to plot one week: ``<duration>weeks=1</duration>``. The default "
"value is hours=24."
msgstr "Cet élément définit la durée de la rose des vents, à moins que démarrage et arrêt soient définies. Il est utilisé dans la construction d'un objet Python timedelta. Par exemple, pour tracer une semaine: ``<duration> weeks=1</duration>``. La valeur par défaut est hours=24."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:100
msgid ""
"Controls the layout of the plots. Default is a grid that is wider than it is"
" tall. The layout element specifies rows and columns. For example: "
"``<layout>4, 2</layout>`` will use a grid of 4 rows and 2 columns."
msgstr "Contrôle la disposition des graphes. Le défaut est une grille qui est plus large que haute. L'élément de mise en page définit les lignes et les colonnes. Par exemple: ``<layout> 4, 2 </ layout>`` utilisera une grille de 4 lignes et 2 colonnes."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:108
msgid ""
"Sets the overall dimensions of the image file containing the graph. Default "
"is a height of 600 pixels and a width that depends on the layout. Any size "
"element must include both width and height. For example: ``<size>800, "
"600</size>`` will produce an image 800 pixels wide and 600 pixels high."
msgstr "Définit les dimensions globales du fichier image contenant le graphe. Par défaut elle est d'une hauteur de 600 pixels et une largeur qui dépend de la disposition. Tout élément de taille doit inclure à la fois la largeur et la hauteur. Par exemple: ``<size>800, 600</size>`` produira une image 800 pixels de large et 600 pixels de haut."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:117
msgid ""
"Sets the image format of the file containing the plots. Default is png. Any "
"string recognised by your installation of gnuplot should do. For example: "
"``<fileformat>gif</fileformat>`` will produce a GIF image."
msgstr "Définit le format d'image du fichier contenant les graphes. Par défaut png. Toute chaîne reconnue par votre installation de gnuplot peut convenir. Par exemple: ``<fileformat>gif</fileformat>`` va produire une image GIF."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:123
msgid "lmargin, rmargin, tmargin, bmargin"
msgstr "lmargin, rmargin, tmargin, bmargin"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:125
msgid ""
"Over-rides the automatically computed left, right, top or bottom margin. "
"Supply any positive real number, for example ``<lmargin>1.3</lmargin>``. "
"Some experimentation may be necessary to find the best values."
msgstr "Remplace automatiquement la marge calculée pour la gauche, la droite, la marge supérieure ou inférieure. Fournir tout nombre réel positif, par exemple ``<lmargin>1.3</lmargin> ``. Quelques essais peuvent être nécessaires pour trouver les meilleures valeurs."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:135
msgid ""
"Sets the overall title of the plots. A single line of text, for example: "
"``<title>Today's wind direction</title>``. This title appears at the very "
"top, outside any plot area."
msgstr ""

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:139
msgid ""
"If the title contains any \"%\" characters it will be used as a strftime "
"style format string for the datetime of the stop value. This allows you to "
"include the graph's date or time in the title, for example: ``<title>Wind "
"over 24 hours ending %H:%M (mph)</title>``"
msgstr ""

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:146
msgid "windrose"
msgstr "windrose"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:148
msgid ""
"A separate plot is drawn for each windrose element, but all share the same "
"time period."
msgstr "Un tracé séparé est établi pour chaque élément de rose des vents, mais tous partagent le même période."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:154
msgid ""
"Selects if data is included in the wind rose. The value should be a valid "
"Python logical expression. For example, to plot a rose for afternoon winds "
"only: ``<xcalc>data['idx'].hour &gt;= 12</xcalc>``. This allows aggregation "
"of afternoon wind data over several days. Remember that data is indexed in "
"UTC, so you need to use an expression that takes account of your time zone. "
"The default value is 'True'."
msgstr "Sélectionne si les données sont incluses dans la rose des vents. La valeur doit être une expression logique Python valide. Par exemple, pour tracer une rose des vents pour l'après-midi seulement: ``<xcalc>data ['idx'].hour&gt;= 12</xcalc>``. Cela permet l'agrégation des données de vent l'après-midi pendant plusieurs jours. Rappelez-vous que les données sont indexées en UTC, vous devez donc utiliser une expression qui tient compte de votre fuseau horaire. La valeur par défaut est \"True\"."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:164
msgid ""
"Selects the data to be plotted. Any one line Python expression that returns "
"a single float value can be used. At its simplest this just selects one "
"value from the \"data\" dictionary, for example: "
"``<ycalc>data['wind_ave']</ycalc>``. To convert to mph use: "
"``<ycalc>data['wind_ave'] * 3.6 / 1.609344</ycalc>``. You are unlikely to "
"want to use anything other than 'wind_ave' here."
msgstr "Sélectionne les données à tracer. Toute expression Python sur une ligne qui retourne une valeur flottante simple peut être utilisée. Dans sa plus simple utilisation cela sélectionne une seule valeur du dictionnaire de \"données\", par exemple: ``<ycalc>data['wind_ave']</ycalc>``. Pour convertir en mph, utiliser: ``<ycalc>data['wind_ave'] * 3.6 / 1.609344</ycalc>``. Il est très peu probable de vouloir utiliser pour autre chose que 'wind_ave' ici."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:172
msgid "threshold"
msgstr "threshold"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:174
msgid ""
"Sets the thresholds for each colour on the rose petals. Defaults are based "
"on the Wikipedia example. The values should be a correctly ordered list of "
"real numbers, for example: ``<threshold>0.5, 3.5, 7.5, 12.5, 18.5, 24.5, "
"31.5</threshold>`` approximates to the Beaufort scale, if ycalc has been set"
" to convert windspeeds to mph."
msgstr "Définit les seuils pour chaque couleur sur les pétales de rose. Par défaut sont basées sur l'exemple Wikipedia. Les valeurs doivent être une liste correctement ordonnée de nombres réels, par exemple: ``<threshold>0.5, 3.5, 7.5, 12.5, 18.5, 24.5, 31.5</threshold>`` se rapproche de l'échelle de Beaufort, si ycalc a été défini pour convertir les vitesses de vent en mph."

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:183
msgid ""
"Sets the colours of the threshold petal segments. Can be any sequence of "
"values accepted by gnuplot. Default value is a sequence of integer colour "
"indexes, which is probably not what you want. You may need to experiment "
"with more complicated values such as ::"
msgstr ""

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:193
msgid ""
"Sets the upper limits of the axes. The rose shows what percentage of the "
"time the wind came from a particular direction. For example, if you live "
"somewhere with a very steady wind you might want to allow higher percentages"
" than normal: ``<yrange>91</yrange>``. Auto-scaling is also possible, using "
"an asterisk: ``<yrange>*</yrange>``"
msgstr "Définit les limites supérieures des axes. La rose indique le pourcentage du temps où le vent est venu d'une direction particulière. Par exemple, si vous vivez dans un endroit avec un vent très régulier vous voudrez peut-être permettre à des pourcentages plus élevés que la normale: ``<yrange> 91</ yrange>`` . Auto-mise à l'échelle est également possible, à l'aide d'un astérisque:``<yrange> *</ yrange>``"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:200
msgid "points"
msgstr "points"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:202
msgid ""
"Sets the text of the compass points. The defaults are 'N', 'S', 'E' & 'W'. "
"For graphs in another language you can over-ride this, for example: "
"``<points>'No', 'Zu', 'Oo', 'We'</points>``. (The preferred way to do this "
"is to create a language file, see Localisation.py.)"
msgstr "Définit le texte des points cardinaux. Les valeurs par défaut sont 'N', 'S', 'E' et 'W'. Pour les graphiques dans une autre langue, vous pouvez les remplacer, par exemple par ceci: ``<points>'No', 'Zu', 'Oo', 'We'</points>``. (La meilleure façon de le faire est de créer un fichier de langue, voir Localisation.py.)"

#: ../../src/pywws/WindRose.pydocstring of pywws.WindRose:221
msgid ""
"Sets the title of the plot. A single line of text, for example: "
"``<title>Morning winds</title>``. This title appears within the plot area, "
"above the threshold colour key."
msgstr "Définit le titre du graphe. Une seule ligne de texte, par exemple: ``<title>Vents du matin</title>``. Ce titre apparaît dans la zone de traçage, au-dessus de la légende des couleurs."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.WindRose.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.WindRose.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`apparent_temp <pywws.WindRose.apparent_temp>`\\ (temp, rh, wind)"
msgstr ":obj:`apparent_temp <pywws.WindRose.apparent_temp>`\\ (temp, hr, vent)"

#: ../../<autosummary>:1
msgid ":obj:`cadhumidex <pywws.WindRose.cadhumidex>`\\ (temp, humidity)"
msgstr ":obj:`cadhumidex <pywws.WindRose.cadhumidex>`\\ (temp, humidité)"

#: ../../<autosummary>:1
msgid ":obj:`dew_point <pywws.WindRose.dew_point>`\\ (temp, hum)"
msgstr ":obj:`dew_point <pywws.WindRose.dew_point>`\\ (temp, hum)"

#: ../../<autosummary>:1
msgid ":obj:`illuminance_wm2 <pywws.WindRose.illuminance_wm2>`\\ (lux)"
msgstr ":obj:`illuminance_wm2 <pywws.WindRose.illuminance_wm2>`\\ (lux)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.WindRose.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.WindRose.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`pressure_inhg <pywws.WindRose.pressure_inhg>`\\ (hPa)"
msgstr ":obj:`pressure_inhg <pywws.WindRose.pressure_inhg>`\\ (hPa)"

#: ../../<autosummary>:1
msgid ""
":obj:`pressure_trend_text <pywws.WindRose.pressure_trend_text>`\\ (trend)"
msgstr ":obj:`pressure_trend_text <pywws.WindRose.pressure_trend_text>`\\ (trend)"

#: ../../<autosummary>:1
msgid ":obj:`rain_inch <pywws.WindRose.rain_inch>`\\ (mm)"
msgstr ":obj:`rain_inch <pywws.WindRose.rain_inch>`\\ (mm)"

#: ../../<autosummary>:1
msgid ":obj:`temp_f <pywws.WindRose.temp_f>`\\ (c)"
msgstr ":obj:`temp_f <pywws.WindRose.temp_f>`\\ (c)"

#: ../../<autosummary>:1
msgid ""
":obj:`usaheatindex <pywws.WindRose.usaheatindex>`\\ (temp, humidity, dew)"
msgstr ":obj:`usaheatindex <pywws.WindRose.usaheatindex>`\\ (temp, humidité, point de rosée)"

#: ../../<autosummary>:1
msgid ":obj:`wind_bft <pywws.WindRose.wind_bft>`\\ (ms)"
msgstr ":obj:`wind_bft <pywws.WindRose.wind_bft>`\\ (ms)"

#: ../../<autosummary>:1
msgid ":obj:`wind_chill <pywws.WindRose.wind_chill>`\\ (temp, wind)"
msgstr ":obj:`wind_chill <pywws.WindRose.wind_chill>`\\ (temp, vent)"

#: ../../<autosummary>:1
msgid ":obj:`wind_kmph <pywws.WindRose.wind_kmph>`\\ (ms)"
msgstr ":obj:`wind_kmph <pywws.WindRose.wind_kmph>`\\ (ms)"

#: ../../<autosummary>:1
msgid ":obj:`wind_kn <pywws.WindRose.wind_kn>`\\ (ms)"
msgstr ":obj:`wind_kn <pywws.WindRose.wind_kn>`\\ (ms)"

#: ../../<autosummary>:1
msgid ":obj:`wind_mph <pywws.WindRose.wind_mph>`\\ (ms)"
msgstr ":obj:`wind_mph <pywws.WindRose.wind_mph>`\\ (ms)"

#: ../../<autosummary>:1
msgid ""
":obj:`winddir_average <pywws.WindRose.winddir_average>`\\ (data, threshold, "
"min_count)"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`winddir_degrees <pywws.WindRose.winddir_degrees>`\\ (pts)"
msgstr ":obj:`winddir_degrees <pywws.WindRose.winddir_degrees>`\\ (pts)"

#: ../../<autosummary>:1
msgid ":obj:`winddir_text <pywws.WindRose.winddir_text>`\\ (pts)"
msgstr ":obj:`winddir_text <pywws.WindRose.winddir_text>`\\ (pts)"

#: ../../<autosummary>:1
msgid ""
":obj:`BasePlotter <pywws.WindRose.BasePlotter>`\\ (params, status, raw_data,"
" ...)"
msgstr ":obj:`BasePlotter <pywws.WindRose.BasePlotter>`\\ (params, status, raw_data, ...)"

#: ../../<autosummary>:1
msgid ""
":obj:`RosePlotter <pywws.WindRose.RosePlotter>`\\ (params, status, raw_data,"
" ...)"
msgstr ":obj:`RosePlotter <pywws.WindRose.RosePlotter>`\\ (params, status, raw_data, ...)"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.WindRose.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.WindRose.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.WindRose.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.WindRose.timedelta>`\\"

#: ../../src/doc/api/pywws.YoWindow.rst:2
msgid "pywws.YoWindow"
msgstr "pywws.YoWindow"

#: ../../src/pywws/YoWindow.pydocstring of pywws.YoWindow:1
msgid "Generate YoWindow XML file ::"
msgstr "Génére un fichier XML YoWindow."

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.YoWindow.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.YoWindow.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`apparent_temp <pywws.YoWindow.apparent_temp>`\\ (temp, rh, wind)"
msgstr ":obj:`apparent_temp <pywws.YoWindow.apparent_temp>`\\ (temp, hr, vent)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.YoWindow.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.YoWindow.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`YoWindow <pywws.YoWindow.YoWindow>`\\ (calib_data)"
msgstr ":obj:`YoWindow <pywws.YoWindow.YoWindow>`\\ (calib_data)"

#: ../../<autosummary>:1
msgid "Class to write YoWindow XML file."
msgstr "Classe pour écrire un fichier XML YoWindow."

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.YoWindow.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.YoWindow.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.YoWindow.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.YoWindow.timedelta>`\\"

#: ../../src/pywws/YoWindow.pydocstring of pywws.YoWindow.YoWindow:1
msgid ""
"Class to write YoWindow XML file. For file spec see "
"http://yowindow.com/doc/yowindow_pws_format.xml"
msgstr "Classe pour écrire un fichier XML YoWindow. Pour voir les spécifications du fichier http://yowindow.com/doc/yowindow_pws_format.xml"

#: ../../src/doc/api/pywws.ZambrettiCore.rst:2
msgid "pywws.ZambrettiCore"
msgstr "pywws.ZambrettiCore"

#: ../../<autosummary>:1
msgid ""
":obj:`ZambrettiCode <pywws.ZambrettiCore.ZambrettiCode>`\\ (pressure, month,"
" wind, trend)"
msgstr ":obj:`ZambrettiCode <pywws.ZambrettiCore.ZambrettiCode>`\\ (pression, mois, vent, tendance)"

#: ../../<autosummary>:1
msgid "Simple implementation of Zambretti forecaster algorithm."
msgstr "Implémentation simple de l'algorithme de prévision de Zambretti."

#: ../../<autosummary>:1
msgid ":obj:`ZambrettiText <pywws.ZambrettiCore.ZambrettiText>`\\ (letter)"
msgstr ":obj:`ZambrettiText <pywws.ZambrettiCore.ZambrettiText>`\\ (lettre)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.ZambrettiCore.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.ZambrettiCore.main>`\\ ([argv])"

#: ../../src/pywws/ZambrettiCore.pydocstring of
#: pywws.ZambrettiCore.ZambrettiCode:1
msgid ""
"Simple implementation of Zambretti forecaster algorithm. Inspired by "
"beteljuice.com Java algorithm, as converted to Python by "
"honeysucklecottage.me.uk, and further information from "
"http://www.meteormetrics.com/zambretti.htm"
msgstr "Mise en œuvre simple de l'algorithme de prévision Zambretti. Inspiré par algorithme Java de beteljuice.com, telle que convertie en Python par honeysucklecottage.me.uk, et d'autres informations à partir de http://www.meteormetrics.com/zambretti.htm"

#: ../../src/doc/api/pywws.calib.rst:2
msgid "pywws.calib"
msgstr "pywws.calib"

#: ../../src/pywws/calib.pydocstring of pywws.calib:2
msgid "Calibrate raw weather station data"
msgstr "Calibre les données brutes de la station météo"

#: ../../src/pywws/calib.pydocstring of pywws.calib:4
msgid ""
"This module allows adjustment of raw data from the weather station as part "
"of the 'processing' step (see :doc:`pywws.Process`). For example, if you "
"have fitted a funnel to double your rain gauge's collection area, you can "
"write a calibration routine to double the rain value."
msgstr "Ce module permet d'ajuster les données brutes de la station météo dans le cadre de l'étape de 'traitement' (voir :doc:`pywws.Process` ). Par exemple, si vous avez installé un entonnoir pour doubler votre zone de collecte du pluviomètre, vous pouvez écrire une routine de calibration pour doubler la valeur de pluie."

#: ../../src/pywws/calib.pydocstring of pywws.calib:9
msgid ""
"The default calibration generates the relative atmospheric pressure. Any "
"user calibration you write must also do this."
msgstr ""

#: ../../src/pywws/calib.pydocstring of pywws.calib:13
msgid "Writing your calibration module"
msgstr "Écrire votre module de calibration"

#: ../../src/pywws/calib.pydocstring of pywws.calib:15
msgid ""
"Firstly, decide where you want to keep your module. Like your text and graph"
" templates, it's best to keep it separate from the pywws code, so it isn't "
"affected by pywws upgrades. I suggest creating a ``modules`` directory in "
"the same place as your ``templates`` directory."
msgstr "Tout d'abord, décider où vous voulez garder votre module. Comme vos gabarits texte et graphe, il est préférable de le garder séparé du code pywws, de sorte qu'il n'est pas affecté par les mises à jour de pywws. Je suggère la création d'un répertoire ``modules`` au même endroit que votre répertoire ``templates``."

#: ../../src/pywws/calib.pydocstring of pywws.calib:20
msgid ""
"You could start by copying one of the example calibration modules, or you "
"can create a plain text file in your ``modules`` directory, e.g. "
"``calib.py`` and copy the following text into it::"
msgstr ""

#: ../../src/pywws/calib.pydocstring of pywws.calib:34
msgid ""
"The :class:`Calib` class has two methods. :py:meth:`Calib.__init__` is the "
"constructor and is a good place to set any constants you need. It is passed "
"a reference to the raw data storage which can be useful for advanced tasks "
"such as spike removal. :py:meth:`Calib.calib` generates a single set of "
"'calibrated' data from a single set of 'raw' data. There are a few rules to "
"follow when writing this method:"
msgstr ""

#: ../../src/pywws/calib.pydocstring of pywws.calib:41
msgid ""
"Make sure you include the line ``result = dict(raw)``, which copies all the "
"raw data to your result value, at the start."
msgstr "Assurez-vous d'inclure la ligne ``result = dict(raw)``, qui permet de copier toutes les données brutes à votre résultat, au début."

#: ../../src/pywws/calib.pydocstring of pywws.calib:44
msgid "Don't modify any of the raw data."
msgstr "Ne modifiez pas les données brutes."

#: ../../src/pywws/calib.pydocstring of pywws.calib:46
msgid "Make sure you set ``result['rel_pressure']``."
msgstr "Assurez-vous que vous définissez ``result['rel_pressure']``."

#: ../../src/pywws/calib.pydocstring of pywws.calib:48
msgid "Don't forget to ``return`` the result at the end."
msgstr "N'oubliez pas de retourner (``return``) le résultat à la fin."

#: ../../src/pywws/calib.pydocstring of pywws.calib:50
msgid ""
"When you've finished writing your calibration module you can get pywws to "
"use it by putting its location in your ``weather.ini`` file. It goes in the "
"``[paths]`` section, as shown in the example below::"
msgstr "Lorsque vous avez fini d'écrire votre module de calibration vous pouvez demander à pywws de l'utiliser en mettant son emplacement dans votre fichier ``weather.ini``. Il va dans les sections ``[paths]``, comme le montre l'exemple ci-dessous::"

#: ../../src/pywws/calib.pydocstring of pywws.calib:60
msgid ""
"Note that the ``user_calib`` value need not include the ``.py`` at the end "
"of the file name."
msgstr "Notez que la valeur de ``user_calib`` ne doit pas inclure le ``.py`` à la fin du nom de fichier."

#: ../../<autosummary>:1
msgid ":obj:`Calib <pywws.calib.Calib>`\\ (params, stored_data)"
msgstr ":obj:`Calib <pywws.calib.Calib>`\\ (params, stored_data)"

#: ../../<autosummary>:1
msgid ":obj:`DefaultCalib <pywws.calib.DefaultCalib>`\\ (params, stored_data)"
msgstr ":obj:`DefaultCalib <pywws.calib.DefaultCalib>`\\ (params, stored_data)"

#: ../../<autosummary>:1 ../../src/pywws/calib.pydocstring of
#: pywws.calib.DefaultCalib:1
msgid "Default calibration class."
msgstr "Classe de calibration par défaut"

#: ../../src/pywws/calib.pydocstring of pywws.calib.DefaultCalib:3
msgid ""
"This class sets the relative pressure, using a pressure offset originally "
"read from the weather station. This is the bare minimum 'calibration' "
"required."
msgstr ""

#: ../../src/pywws/calib.pydocstring of pywws.calib.Calib:3
msgid ""
"Other pywws modules use this method to create a calibration object. The "
"constructor creates either a default calibration object or a user "
"calibration object, depending on the ``user_calib`` value in the ``[paths]``"
" section of the ``params`` parameter. It then adopts the calibration "
"object's :py:meth:`calib` method as its own."
msgstr "D'autres modules pywws utilisent cette méthode pour créer un objet de calibration. Le constructeur crée soit un objet de calibration par défaut ou un objet de calibration utilisateur, en fonction de la valeur ``user_calib`` dans la section ``[paths]`` du paramètre ``params``. Il adopte alors la méthode de calibration de l'objet :py: meth:`calib` comme sien."

#: ../../src/doc/api/pywws.constants.rst:2
msgid "pywws.constants"
msgstr "pywws.constants"

#: ../../src/pywws/constants.pydocstring of pywws.constants:1
msgid "Bits of data used in several places."
msgstr "Bits de données utilisées dans plusieurs endroits."

#: ../../src/pywws/constants.pydocstring of pywws.constants:3
msgid ""
"This module collects together some 'constants' that are used in other pywws "
"modules."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`Twitter <pywws.constants.Twitter>`\\"
msgstr ":obj:`Twitter <pywws.constants.Twitter>`\\"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.constants.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.constants.timedelta>`\\"

#: ../../src/doc/api/pywws.conversions.rst:2
msgid "pywws.conversions"
msgstr "pywws.conversions"

#: ../../src/pywws/conversions.pydocstring of pywws.conversions:1
msgid ""
"conversions.py - a set of functions to convert pywws native units "
"(Centigrade, mm, m/s, hPa) to other popular units"
msgstr "conversions.py est un ensemble de fonctions pour convertir les unités pywws natives (centigrades, mm, m / s, hPa), en d'autres unités de mesure populaires"

#: ../../<autosummary>:1
msgid ""
":obj:`apparent_temp <pywws.conversions.apparent_temp>`\\ (temp, rh, wind)"
msgstr ":obj:`apparent_temp <pywws.conversions.apparent_temp>`\\ (temp, hr, vent)"

#: ../../<autosummary>:1
msgid ":obj:`cadhumidex <pywws.conversions.cadhumidex>`\\ (temp, humidity)"
msgstr ":obj:`cadhumidex <pywws.conversions.cadhumidex>`\\ (temp, humidité)"

#: ../../<autosummary>:1
msgid ":obj:`dew_point <pywws.conversions.dew_point>`\\ (temp, hum)"
msgstr ":obj:`dew_point <pywws.conversions.dew_point>`\\ (temp, hum)"

#: ../../<autosummary>:1
msgid ":obj:`illuminance_wm2 <pywws.conversions.illuminance_wm2>`\\ (lux)"
msgstr ":obj:`illuminance_wm2 <pywws.conversions.illuminance_wm2>`\\ (lux)"

#: ../../<autosummary>:1
msgid ":obj:`pressure_inhg <pywws.conversions.pressure_inhg>`\\ (hPa)"
msgstr ":obj:`pressure_inhg <pywws.conversions.pressure_inhg>`\\ (hPa)"

#: ../../<autosummary>:1
msgid ""
":obj:`pressure_trend_text <pywws.conversions.pressure_trend_text>`\\ (trend)"
msgstr ":obj:`pressure_trend_text <pywws.conversions.pressure_trend_text>`\\ (trend)"

#: ../../<autosummary>:1
msgid ":obj:`rain_inch <pywws.conversions.rain_inch>`\\ (mm)"
msgstr ":obj:`rain_inch <pywws.conversions.rain_inch>`\\ (mm)"

#: ../../<autosummary>:1
msgid ":obj:`temp_f <pywws.conversions.temp_f>`\\ (c)"
msgstr ":obj:`temp_f <pywws.conversions.temp_f>`\\ (c)"

#: ../../<autosummary>:1
msgid ""
":obj:`usaheatindex <pywws.conversions.usaheatindex>`\\ (temp, humidity, dew)"
msgstr ":obj:`usaheatindex <pywws.conversions.usaheatindex>`\\ (temp, humidité, point de rosée)"

#: ../../<autosummary>:1
msgid ":obj:`wind_bft <pywws.conversions.wind_bft>`\\ (ms)"
msgstr ":obj:`wind_bft <pywws.conversions.wind_bft>`\\ (ms)"

#: ../../<autosummary>:1
msgid ":obj:`wind_chill <pywws.conversions.wind_chill>`\\ (temp, wind)"
msgstr ":obj:`wind_chill <pywws.conversions.wind_chill>`\\ (temp, vent)"

#: ../../<autosummary>:1
msgid ":obj:`wind_kmph <pywws.conversions.wind_kmph>`\\ (ms)"
msgstr ":obj:`wind_kmph <pywws.conversions.wind_kmph>`\\ (ms)"

#: ../../<autosummary>:1
msgid ":obj:`wind_kn <pywws.conversions.wind_kn>`\\ (ms)"
msgstr ":obj:`wind_kn <pywws.conversions.wind_kn>`\\ (ms)"

#: ../../<autosummary>:1
msgid ":obj:`wind_mph <pywws.conversions.wind_mph>`\\ (ms)"
msgstr ":obj:`wind_mph <pywws.conversions.wind_mph>`\\ (ms)"

#: ../../<autosummary>:1
msgid ""
":obj:`winddir_average <pywws.conversions.winddir_average>`\\ (data, "
"threshold, min_count)"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`winddir_degrees <pywws.conversions.winddir_degrees>`\\ (pts)"
msgstr ":obj:`winddir_degrees <pywws.conversions.winddir_degrees>`\\ (pts)"

#: ../../<autosummary>:1
msgid ":obj:`winddir_text <pywws.conversions.winddir_text>`\\ (pts)"
msgstr ":obj:`winddir_text <pywws.conversions.winddir_text>`\\ (pts)"

#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:22
msgid ""
"The return value is in degrees, not the 0..15 range used elsewhere in pywws."
msgstr ""

#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:25
msgid "a slice of pywws raw/calib or hourly data."
msgstr ""

#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:29
msgid "minimum average windspeed for there to be a valid wind direction."
msgstr ""

#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.winddir_average:34
msgid "minimum number of data items for there to be a valid wind direction."
msgstr ""

#: ../../src/pywws/conversions.pydocstring of pywws.conversions.usaheatindex:3
msgid ""
"See http://en.wikipedia.org/wiki/Heat_index, formula 1. The formula is not "
"valid for T < 26.7C, Dew Point < 12C, or RH < 40%"
msgstr "Voir  http://en.wikipedia.org/wiki/Heat_index, formule 1. La formule n'est pas valide pour T < 26.7C, Point de rosée < 12C, ou HR < 40%"

#: ../../src/pywws/conversions.pydocstring of pywws.conversions.wind_chill:1
msgid ""
"Compute wind chill, using formula from "
"http://en.wikipedia.org/wiki/wind_chill"
msgstr "Calcule le refroidissement éolien, en utilisant la formule provenant de http://en.wikipedia.org/wiki/wind_chill"

#: ../../src/pywws/conversions.pydocstring of
#: pywws.conversions.apparent_temp:1
msgid ""
"Compute apparent temperature (real feel), using formula from "
"http://www.bom.gov.au/info/thermal_stress/"
msgstr "Calcule la température apparente (sensation réelle), en utilisant la formule provenant de http://www.bom.gov.au/info/thermal_stress/"

#: ../../src/doc/api/pywws.device_ctypes_hidapi.rst:2
msgid "pywws.device_ctypes_hidapi"
msgstr "pywws.device_ctypes_hidapi"

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi:1
msgid ""
"Low level USB interface to weather station, using ctypes to access hidapi."
msgstr "Interface USB de bas niveau de la station météo, utilisant ctype pour accéder hidapi."

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi:6
msgid ""
"This module handles low level communication with the weather station via "
"`ctypes <http://docs.python.org/2/library/ctypes.html>`_ and the `hidapi "
"<https://github.com/signal11/hidapi>`_ library. It is one of several USB "
"device modules, each of which uses a different USB library interface. See "
":ref:`Installation - USB library<dependencies-usb>` for details."
msgstr ""

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi:15
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi:13 ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1:14 ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb:13 ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1:13
msgid "Testing"
msgstr "Vérification"

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi:17
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi:15 ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb:15 ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1:15
msgid ""
"Run :py:mod:`pywws.TestWeatherStation` with increased verbosity so it "
"reports which USB device access module is being used::"
msgstr ""

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi:32
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi:30 ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1:34 ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb:30 ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1:30 ../../src/pywws/toservice.pydocstring of
#: pywws.toservice:117
msgid "API"
msgstr "API"

#: ../../<autosummary>:1
msgid ":obj:`find_library <pywws.device_ctypes_hidapi.find_library>`\\ (name)"
msgstr ":obj:`find_library <pywws.device_ctypes_hidapi.find_library>`\\ (name)"

#: ../../<autosummary>:1
msgid ""
":obj:`USBDevice <pywws.device_ctypes_hidapi.USBDevice>`\\ (vendor_id, "
"product_id)"
msgstr ":obj:`USBDevice <pywws.device_ctypes_hidapi.USBDevice>`\\ (vendor_id, product_id)"

#: ../../<autosummary>:1 ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice:1
msgid "Low level USB device access via hidapi library."
msgstr "Accès de bas niveau au périphérique USB via la bibliothèque hidapi."

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice:3
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice:3
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice:3 ../../src/pywws/device_pyusb.pydocstring
#: of pywws.device_pyusb.USBDevice:3 ../../src/pywws/device_pyusb1.pydocstring
#: of pywws.device_pyusb1.USBDevice:3
msgid "the USB \"vendor ID\" number, for example 0x1941."
msgstr ""

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice:7
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice:7
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice:7 ../../src/pywws/device_pyusb.pydocstring
#: of pywws.device_pyusb.USBDevice:7 ../../src/pywws/device_pyusb1.pydocstring
#: of pywws.device_pyusb1.USBDevice:7
msgid "the USB \"product ID\" number, for example 0x8021."
msgstr ""

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice.read_data:1
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice.read_data:1
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice.read_data:1
#: ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb.USBDevice.read_data:1
#: ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1.USBDevice.read_data:1
msgid "Receive data from the device."
msgstr "Reçoit des données de l'appareil."

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice.read_data:3
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice.read_data:3
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice.read_data:3
#: ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb.USBDevice.read_data:3
#: ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1.USBDevice.read_data:3
msgid ""
"If the read fails for any reason, an :obj:`IOError` exception is raised."
msgstr "Si la lecture échoue pour une raison quelconque, une exception :obj:`IOError` est levée."

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice.read_data:6
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice.read_data:6
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice.read_data:6
#: ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb.USBDevice.read_data:6
#: ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1.USBDevice.read_data:6
msgid "the number of bytes to read."
msgstr ""

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice.read_data:10
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice.read_data:10
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice.read_data:10
#: ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb.USBDevice.read_data:10
#: ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1.USBDevice.read_data:10
msgid "the data received."
msgstr ""

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice.write_data:1
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice.write_data:1
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice.write_data:1
#: ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb.USBDevice.write_data:1
#: ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1.USBDevice.write_data:1
msgid "Send data to the device."
msgstr "Envoyer donnée au service"

#: ../../src/pywws/device_ctypes_hidapi.pydocstring of
#: pywws.device_ctypes_hidapi.USBDevice.write_data:3
#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice.write_data:3
#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice.write_data:6
#: ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb.USBDevice.write_data:6
#: ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1.USBDevice.write_data:6
msgid "the data to send."
msgstr ""

#: ../../src/doc/api/pywws.device_cython_hidapi.rst:2
msgid "pywws.device_cython_hidapi"
msgstr "pywws.device_cython_hidapi"

#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi:1
msgid "Low level USB interface to weather station, using cython-hidapi."
msgstr "Interface USB de bas niveau de la station météo, utilisant cython-hidapi."

#: ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi:6
msgid ""
"This module handles low level communication with the weather station via the"
" `cython-hidapi <https://github.com/gbishop/cython-hidapi>`_ library. It is "
"one of several USB device modules, each of which uses a different USB "
"library interface. See :ref:`Installation - USB library<dependencies-usb>` "
"for details."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`USBDevice <pywws.device_cython_hidapi.USBDevice>`\\ (idVendor, "
"idProduct)"
msgstr ":obj:`USBDevice <pywws.device_cython_hidapi.USBDevice>`\\ (idVendor, idProduct)"

#: ../../<autosummary>:1 ../../src/pywws/device_cython_hidapi.pydocstring of
#: pywws.device_cython_hidapi.USBDevice:1
msgid "Low level USB device access via cython-hidapi library."
msgstr "Accès de bas niveau au périphérique USB via la bibliothèque cython-hidapi."

#: ../../src/doc/api/pywws.device_libusb1.rst:2
msgid "pywws.device_libusb1"
msgstr ""

#: ../../src/pywws/device_libusb1.pydocstring of pywws.device_libusb1:1
msgid "Low level USB interface to weather station, using python-libusb1."
msgstr "Interface USB de bas niveau de la station météo, à l'aide de python-libusb1.  "

#: ../../src/pywws/device_libusb1.pydocstring of pywws.device_libusb1:6
msgid ""
"This module handles low level communication with the weather station via the"
" `python-libusb1 <https://github.com/vpelletier/python-libusb1>`_ library. "
"It is one of several USB device modules, each of which uses a different USB "
"library interface. See :ref:`Installation - USB library<dependencies-usb>` "
"for details."
msgstr ""

#: ../../src/pywws/device_libusb1.pydocstring of pywws.device_libusb1:16
msgid ""
"Run :py:mod:`pywws-testweatherstation <pywws.TestWeatherStation>` with "
"increased verbosity so it reports which USB device access module is being "
"used::"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`USBDevice <pywws.device_libusb1.USBDevice>`\\ (idVendor, idProduct)"
msgstr ""

#: ../../src/pywws/device_libusb1.pydocstring of
#: pywws.device_libusb1.USBDevice.write_data:3
#: ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb.USBDevice.write_data:3
#: ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1.USBDevice.write_data:3
msgid ""
"If the write fails for any reason, an :obj:`IOError` exception is raised."
msgstr "Si l'écriture échoue pour une raison quelconque, une exception :obj:`IOError` est levée."

#: ../../src/doc/api/pywws.device_pyusb.rst:2
msgid "pywws.device_pyusb"
msgstr "pywws.device_pyusb"

#: ../../src/pywws/device_pyusb.pydocstring of pywws.device_pyusb:1
msgid "Low level USB interface to weather station, using PyUSB v0.4."
msgstr "Interface USB de bas niveau de la station météo, à l'aide de PyUSB v0.4."

#: ../../src/pywws/device_pyusb.pydocstring of pywws.device_pyusb:6
msgid ""
"This module handles low level communication with the weather station via the"
" `PyUSB <http://sourceforge.net/apps/trac/pyusb/>`_ library. It is one of "
"several USB device modules, each of which uses a different USB library "
"interface. See :ref:`Installation - USB library<dependencies-usb>` for "
"details."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`USBDevice <pywws.device_pyusb.USBDevice>`\\ (idVendor, idProduct)"
msgstr ":obj:`USBDevice <pywws.device_pyusb.USBDevice>`\\ (idVendor, idProduct)"

#: ../../<autosummary>:1 ../../src/pywws/device_pyusb.pydocstring of
#: pywws.device_pyusb.USBDevice:1
msgid "Low level USB device access via PyUSB library."
msgstr "Accès de bas niveau au périphérique USB via la bibliothèque PyUSB."

#: ../../src/doc/api/pywws.device_pyusb1.rst:2
msgid "pywws.device_pyusb1"
msgstr "pywws.device_pyusb1"

#: ../../src/pywws/device_pyusb1.pydocstring of pywws.device_pyusb1:1
msgid "Low level USB interface to weather station, using PyUSB v1.0."
msgstr "Interface USB de bas niveau de la station météo, à l'aide de PyUSB v1.0."

#: ../../src/pywws/device_pyusb1.pydocstring of pywws.device_pyusb1:6
msgid ""
"This module handles low level communication with the weather station via the"
" `PyUSB <http://sourceforge.net/apps/trac/pyusb/>`_ library (version 1.0). "
"It is one of several USB device modules, each of which uses a different USB "
"library interface. See :ref:`Installation - USB library<dependencies-usb>` "
"for details."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`USBDevice <pywws.device_pyusb1.USBDevice>`\\ (idVendor, idProduct)"
msgstr ":obj:`USBDevice <pywws.device_pyusb1.USBDevice>`\\ (idVendor, idProduct)"

#: ../../<autosummary>:1 ../../src/pywws/device_pyusb1.pydocstring of
#: pywws.device_pyusb1.USBDevice:1
msgid "Low level USB device access via PyUSB 1.0 library."
msgstr "Accès de bas niveau au périphérique USB via la bibliothèque PyUSB 1.0."

#: ../../src/doc/api/pywws.livelogdaemon.rst:2
msgid "pywws.livelogdaemon"
msgstr "pywws.livelogdaemon"

#: ../../src/pywws/livelogdaemon.pydocstring of pywws.livelogdaemon:1
msgid "Run 'live logging' as a UNIX daemon."
msgstr "Exécutez 'live logging' comme un démon sous UNIX."

#: ../../src/pywws/livelogdaemon.pydocstring of pywws.livelogdaemon:3
msgid ""
"This script can also be run with the ``pywws-livelog-daemon`` command. ::"
msgstr "Le script peut aussi être exécuté avec la commande ``pywws-livelog-daemon``. ::"

#: ../../src/pywws/livelogdaemon.pydocstring of pywws.livelogdaemon:13
msgid "Requires the python-daemon library."
msgstr ""

#: ../../src/pywws/livelogdaemon.pydocstring of pywws.livelogdaemon:15
msgid ""
"If you get a \"function() argument 1 must be code, not str\" error, try "
"installing python-daemon from PyPI instead of your Linux repos."
msgstr ""

#: ../../src/pywws/livelogdaemon.pydocstring of pywws.livelogdaemon:18
msgid ""
"For more information on 'live logging' see :doc:`../guides/livelogging`."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.livelogdaemon.ApplicationLogger>`\\ "
"(verbose[, logfile])"
msgstr ":obj:`ApplicationLogger <pywws.livelogdaemon.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`LiveLog <pywws.livelogdaemon.LiveLog>`\\ (data_dir)"
msgstr ":obj:`LiveLog <pywws.livelogdaemon.LiveLog>`\\ (data_dir)"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.livelogdaemon.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.livelogdaemon.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ":obj:`DaemonRunner <pywws.livelogdaemon.DaemonRunner>`\\"
msgstr ":obj:`DaemonRunner <pywws.livelogdaemon.DaemonRunner>`\\"

#: ../../<autosummary>:1
msgid "alias of :class:`Dummy`"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`Runner <pywws.livelogdaemon.Runner>`\\ (data_dir, action, "
"files_preserve, ...)"
msgstr ":obj:`Runner <pywws.livelogdaemon.Runner>`\\ (data_dir, action, files_preserve, ...)"

#: ../../src/doc/api/pywws.toservice.rst:2
msgid "pywws.toservice"
msgstr "pywws.toservice"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:1
msgid "Post weather update to services such as Weather Underground ::"
msgstr "Poster des mise à jour météo pour des services tels que Weather Underground ::"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:17
msgid ""
"There are an increasing number of web sites around the world that encourage "
"amateur weather station owners to upload data over the internet."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:21
msgid ""
"This module enables pywws to upload readings to these organisations. It is "
"highly customisable using configuration files. Each 'service' requires a "
"configuration file and one or two templates in ``pywws/services`` (that "
"should not need to be edited by the user) and a section in ``weather.ini`` "
"containing user specific data such as your site ID and password."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:28
msgid ""
"See :ref:`How to integrate pywws with various weather services <guides-"
"integration-other>` for details of the available services."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:32
msgid "Configuration"
msgstr "Configuration"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:34
msgid ""
"If you haven't already done so, visit the organisation's web site and create"
" an account for your weather station. Make a note of any site ID and "
"password details you are given."
msgstr "Si vous ne l'avez pas déjà fait, visitez le site Web de l'organisation et créez un compte pour votre station météo. Prenez note de tous les détails d'identification du site et du mot de passe vous ayant été donnés."

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:38
msgid ""
"Stop any pywws software that is running and then run ``toservice`` to create"
" a section in ``weather.ini``::"
msgstr "Arrêtez toute instance du logiciel pywws en fonction puis exécutez ``toservice.py`` pour créer une section dans le fichier ``weather.ini``::"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:43
msgid ""
"``service_name`` is the single word service name used by pywws, such as "
"``metoffice``, ``data_dir`` is your weather data directory, as usual."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:47
msgid ""
"Edit ``weather.ini`` and find the section corresponding to the service name,"
" e.g. ``[underground]``. Copy your site details into this section, for "
"example::"
msgstr "Editer le fichier ``weather.ini`` et trouver la section correspondant au nom du service, par exemple, ``[underground]``. Copier les détails de votre site dans cette section, par exemple::"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:55
msgid "Now you can test your configuration::"
msgstr "Maintenant, vous pouvez tester votre configuration::"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:59
msgid ""
"This should show you the data string that is uploaded. Any failure should "
"generate an error message."
msgstr "Celà devrait vous afficher la chaîne de données qui est téléversé. Tout manquement devrait générer un message d'erreur."

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:63
msgid "Upload old data"
msgstr "Téléverser les anciennes données"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:65
msgid ""
"Now you can upload your last 7 days' data, if the service supports it. Run "
"``toservice`` with the catchup option::"
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:70
msgid "This may take 20 minutes or more, depending on how much data you have."
msgstr "Cela peut prendre 20 minutes ou plus, en fonction de la quantité de données que vous avez."

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:73
msgid "Add service(s) upload to regular tasks"
msgstr "Ajoutez le(s) téléversement de(s) service(s) aux tâches régulières"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:75
msgid ""
"Edit your ``weather.ini`` again, and add a list of services to the "
"``[live]``, ``[logged]``, ``[hourly]``, ``[12 hourly]`` or ``[daily]`` "
"section, depending on how often you want to send data. For example::"
msgstr "Modifiez votre fichier ``weather.ini`` de nouveau et ajoutez une liste de services dans la section ``[live]``, ``[logged]``, ``[hourly]``, ``[12 hourly]`` ou ``[daily]``, en fonction de la fréquence à laquelle vous souhaitez envoyer les données. Par exemple::"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:97
msgid ""
"Note that the ``[live]`` section is only used when running "
":py:mod:`pywws.LiveLog`. It is a good idea to repeat any service selected in"
" ``[live]`` in the ``[logged]`` or ``[hourly]`` section in case you switch "
"to running :py:mod:`pywws.Hourly`."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:102
msgid ""
"Restart your regular pywws program (:py:mod:`pywws.Hourly` or "
":py:mod:`pywws.LiveLog`) and visit the appropriate web site to see regular "
"updates from your weather station."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:107
msgid "Using a different template"
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice:109
msgid ""
"For some services (mainly MQTT) you might want to write your own template to"
" give greater control over the uploaded data. Copy the default template file"
" from ``pywws/services`` to your template directory and then edit it to do "
"what you want. Now edit ``weather.ini`` and change the ``template`` value "
"from ``default`` to the name of your custom template."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`ApplicationLogger <pywws.toservice.ApplicationLogger>`\\ (verbose[, "
"logfile])"
msgstr ":obj:`ApplicationLogger <pywws.toservice.ApplicationLogger>`\\ (verbose[, logfile])"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.toservice.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.toservice.main>`\\ ([argv])"

#: ../../<autosummary>:1
msgid ""
":obj:`SafeConfigParser <pywws.toservice.SafeConfigParser>`\\ ([defaults, "
"dict_type, ...])"
msgstr ":obj:`SafeConfigParser <pywws.toservice.SafeConfigParser>`\\ ([defaults, dict_type, ...])"

#: ../../<autosummary>:1
msgid ""
":obj:`ToService <pywws.toservice.ToService>`\\ (params, status, calib_data, "
"...)"
msgstr ":obj:`ToService <pywws.toservice.ToService>`\\ (params, status, calib_data, ...)"

#: ../../<autosummary>:1
msgid ""
":obj:`datetime <pywws.toservice.datetime>`\\ (year, month, day[, hour[, "
"minute[, ...)"
msgstr ":obj:`datetime <pywws.toservice.datetime>`\\ (année, mois, jour[, heure[, minute[, ...)"

#: ../../<autosummary>:1
msgid ":obj:`timedelta <pywws.toservice.timedelta>`\\"
msgstr ":obj:`timedelta <pywws.toservice.timedelta>`\\"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice.ToService:5
msgid "pywws configuration."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice.ToService:9
msgid "pywws status store."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice.ToService:13
msgid "'calibrated' data."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of pywws.toservice.ToService:17
msgid "name of service to upload to."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.prepare_data:1
msgid "Prepare a weather data record."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.prepare_data:3
msgid ""
"The :obj:`data` parameter contains the data to be encoded. It should be a "
"'calibrated' data record, as stored in :class:`pywws.DataStore.calib_store`."
" The relevant data items are extracted and converted to strings using a "
"template, then merged with the station's \"fixed\" data."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.prepare_data:9
msgid "the weather data record."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.prepare_data:13
msgid "dict."
msgstr "dict."

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.aprs_send_data:1
msgid "Upload a weather data record using APRS."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.aprs_send_data:3
#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.http_send_data:3
msgid ""
"The :obj:`prepared_data` parameter contains the data to be uploaded. It "
"should be a dictionary of string keys and string values."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.aprs_send_data:6
#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.http_send_data:6
msgid "the timestamp of the data to upload."
msgstr "l'horodatage des données à téléverser"

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.aprs_send_data:10
#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.http_send_data:10
msgid "the data to upload."
msgstr "la donnée à téléverser"

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.aprs_send_data:14
#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.http_send_data:14
#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.Upload:19
msgid "don't get or set the 'last update' status.ini entry."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.aprs_send_data:19
#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.http_send_data:19
#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.Upload:24
msgid "success status"
msgstr "état succès"

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.http_send_data:1
msgid "Upload a weather data record using HTTP."
msgstr "Téléverser un enregistrement de données météorologiques en utilisant HTTP."

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.next_data:1
msgid "Get weather data records to upload."
msgstr "Obtien les enregistrements de données météorologiques à téléverser."

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.next_data:3
msgid ""
"This method returns either the most recent weather data record, or all "
"records since the last upload, according to the value of :obj:`catchup`."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.next_data:7
msgid ""
"``True`` to get all records since last upload, or ``False`` to get most "
"recent data only."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.next_data:12
msgid "a current 'live' data record, or ``None``."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.next_data:16
msgid "don't get the 'last update' status.ini entry."
msgstr ""

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.next_data:21
msgid "yields weather data records."
msgstr "donne des enregistrements de données météo"

#: ../../src/pywws/toservice.pydocstring of pywws.toservice.ToService.Upload:1
msgid "Upload one or more weather data records."
msgstr "Téléverse un ou plusieurs enregistrement(s) de données météo. "

#: ../../src/pywws/toservice.pydocstring of pywws.toservice.ToService.Upload:3
msgid ""
"This method uploads either the most recent weather data record, or all "
"records since the last upload (up to 7 days), according to the value of "
":obj:`catchup`."
msgstr "Cette méthode téléverse le plus récent enregistrement de données météo ou tous les enregistrements depuis le dernier téléchargement (jusqu'à 7 jours), selon la valeur de :obj:`catchup`."

#: ../../src/pywws/toservice.pydocstring of pywws.toservice.ToService.Upload:7
msgid ""
"It sets the ``last update`` configuration value to the time stamp of the "
"most recent record successfully uploaded."
msgstr "Il définit la valeur de configuration ``last update`` à l'horodatage de l'enregistrement le plus récent correctement téléversé."

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.Upload:10
msgid "upload all data since last upload."
msgstr "Téléverser toutes les données depuis le dernier téléversement.  "

#: ../../src/pywws/toservice.pydocstring of
#: pywws.toservice.ToService.Upload:14
msgid ""
"current 'live' data. If not present the most recent logged data is uploaded."
msgstr ""

#: ../../src/doc/api/pywws.version.rst:2
msgid "pywws.version"
msgstr "pywws.version"

#: ../../src/pywws/version.pydocstring of pywws.version:1
msgid "Display pywws version information."
msgstr "Afficher les informations de version pywws."

#: ../../src/pywws/version.pydocstring of pywws.version:3
msgid "This script can also be run with the ``pywws-version`` command. ::"
msgstr "Le script peut aussi être exécuté avec la commande ``pywws-version``. ::"

#: ../../<autosummary>:1
msgid ":obj:`main <pywws.version.main>`\\ ([argv])"
msgstr ":obj:`main <pywws.version.main>`\\ ([argv])"
